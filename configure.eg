$Header: /data/zender/nco_20150216/nco/configure.eg,v 1.88 2004-07-07 05:23:54 zender Exp $ -*-Fundamental-*-

Purpose(s): 
Track status of autobuild features for NCO
Develop recommended ./configure invocations for each architecture

NCO successfully builds (e.g., with bld/Makefile) and runs on virtually all OSs.
This table tracks how well NCO _autobuilds_ (./configure's) on various OSs.
GNU Autotools seem to require a lot of hand tuning on non-LINUX platforms...
Architecture	ABI32	ABI64	DODS	I18N	OpenMP	nco_c++	check
AIX		Y	Y                       Y       Y	Y
ALPHA		Y					Y	Y
CRAY
FREEBSD		N(10)
HPPA
LINUX como	N(11)	
LINUX gcc/g++	Y	N/A	N(12)			Y	Y
LINUX icc	Y	N/A				Y	Y
LINUXALPHA	Y					Y	Y
LINUXAMD64		Y				Y	Y
LINUXPPC	Y					Y	N(9)
LINUXSPARC64	Y					Y	Y
MACOSX		Y					Y(14)	Y(14)
NECSX
SGIMP64 cc/CC	Y	Y				Y	N(6)
SGIMP64 gcc/g++	N(7)					Y
SUNMP cc/CC	Y	Y				Y	Y
SUNMP gcc/g++	N(13)				
WIN32		
-----------------------------------------------------------------------
Key: Y: feature works, N feature broken, N/A not-applicable, blank: not tested (send us your results!)
-----------------------------------------------------------------------
Table footnotes:
06. CC unable to link tst.o because -LANG:std flag not passed to crucial link CC
07. Error making ncap_yacc.c
09. tst fails to find in.nc
10. Major problems with configure script and permissions on installed files
11. Comeau (correctly) insists strdup(), strcasecmp() are not ANSI standard (this should now be fixed, retry)
12. C++ version problems in linking DODS libraries
13. gcc 3.2.1 problem with /usr/include/sys/stat.h in nco_fl_utl.h
14. g++ 2.95 (Darwin 5.5) does not have <valarray>, so the c++ library will not be built; g++ version 3.1 (Darwin 6.8) does. That is all we have tested.
17. 
-----------------------------------------------------------------------

There are three basic ways to build/install NCO with the GNU autotools:
Method 1. Default installation procedure for system-wide installation.

   cd ~/nco;cvs update -kk;make distclean;./configure;make;sudo make install

   This simplest default method works if the required libraries 
   (e.g., libnetcdf.a) are in normal places (e.g., /usr/local/lib).
   No special optimizations or features are activated.

Method 2. Optimized installation procedure for system-wide installation.

   cd ~/nco;cvs update -kk;make distclean;./configure --enable-optimize-custom;make;sudo make install

   Activating --enable-optimize-custom causes NCO to attempt to build with 
   a set of compiler switches customized for speed. 
   This will only work if Method 1 worked, so give it a whirl.

Method 3. Recommended/current custom ./configure invocation
   System administrators like to install multiple compilers, and 
   have libraries in weird places.
   Serious users of NCO are encouraged to try the configurations below.
   The suggestions are alphabetized by (pvmgetarch) machine type.

************************************************************************
Start AIX
status: Appears to work
Updated 5/27/2003   Jim Edwards   
Compiler warnings about incorrect file suffix and duplicate symbols may be safely ignored.
On AIX, shared libraries and static libraries use the same namespace
Hence, probably safer to either disable-shared or disable-static
************************************************************************
zender@bs1201en:~/nco$ pvmgetarch;uname -a;~/nco/autobld/config.guess
AIX
AIX bs1201en 1 5 0023F7EA4C00
powerpc-ibm-aix5.1.0.0

For ABI=64:
# babyblue, bluesky, blackforest, dave, esmf
# Enable OpenMP with CFLAGS and LDFLAGS ='-qsmp=omp'
export GNU_TRP=`~/nco/autobld/config.guess`
export OBJECT_MODE='64' # AIX-specific hack
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='xlc_r' CFLAGS='-qsmp=omp' CXX='xlC_r' LDFLAGS='-brtl -qsmp=omp' NETCDF_INC='/usr/local/include' NETCDF_LIB=${NETCDF_LIB} ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

# blue horizon
export GNU_TRP=`~/nco/autobld/config.guess`
export OBJECT_MODE='64' # AIX-specific hack
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='xlc_r' CXX='xlC_r' LDFLAGS='-brtl' NETCDF_INC='/usr/local/include' NETCDF_LIB=${NETCDF_LIB} ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo zender@dust.ess.uci.edu:/var/ftp/pub/z
ender/nco/rgr

For ABI=32:
export GNU_TRP=`~/nco/autobld/config.guess`
export OBJECT_MODE='32' # AIX-specific hack
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='xlc_r' CXX='xlC_r' LDFLAGS='-brtl' NETCDF_INC='/usr/local/include' NETCDF_LIB='/usr/local/lib32/r4i4' ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

************************************************************************
End AIX
************************************************************************

************************************************************************
Start ALPHA
Status: Does not work
************************************************************************
spe171.testdrive.hp.com

CC=/bin/c89
CPPFLAGS=-D_HPUX_SOURCE
FC=/opt/fortran/bin/fort77
FFLAGS=-w
FLIBS=-lU77
CXX=aCC

zender@spe171.testdrive.hp.com> ./pvmgetarch;uname -a;${HOME}/nco/autobld/config.guess
ALPHA
OSF1 spe171.testdrive.hp.com V5.1 2650 alpha
alpha-dec-osf5.1

gcc/g++:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
NETCDF_INC=${HOME}/include NETCDF_LIB=${HOME}/lib/${GNU_TRP} ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${HOME}/bin/${GNU_TRP} --datadir=${HOME}/nco/data --libdir=${HOME}/lib/${GNU_TRP} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example:

New build example:
************************************************************************
End ALPHA
************************************************************************

************************************************************************
Start FREEBSD
Status: 
************************************************************************
bash-2.05a$ ./pvmgetarch;uname -a;~/nco/autobld/config.guess
FREEBSD
FreeBSD usf-cf-x86-freebsd-1 4.6-STABLE FreeBSD 4.6-STABLE #9: Tue Aug 20 12:33:16 PDT 2002     root@usf-cf-x86-freebsd-1:/usr/obj/usr/src/sys/GENERIC  i386

gcc/g++:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
NETCDF_INC=${HOME}/include NETCDF_LIB=${HOME}/lib/${GNU_TRP} ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${HOME}/bin/${GNU_TRP} --datadir=${HOME}/nco/data --libdir=${HOME}/lib/${GNU_TRP} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
/bin/cp -f config.status config.status.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo config.status.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example:
New build example:
************************************************************************
End FREEBSD
************************************************************************

************************************************************************
Start HPPA
Status: Does not work
************************************************************************
CC=/bin/c89
CPPFLAGS=-D_HPUX_SOURCE
FC=/opt/fortran/bin/fort77
FFLAGS=-w
FLIBS=-lU77
CXX=aCC

spe169> ./pvmgetarch;uname -a;~/nco/autobld/config.guess
HPPA
HP-UX spe169 B.11.11 U 9000/800 1939057856 unlimited-user license
hppa2.0w-hp-hpux11.11

gcc/g++:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
NETCDF_INC=${HOME}/include NETCDF_LIB=${HOME}/lib/${GNU_TRP} ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${HOME}/bin/${GNU_TRP} --datadir=${HOME}/nco/data --libdir=${HOME}/lib/${GNU_TRP} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example:

New build example:
************************************************************************
End HPPA
************************************************************************

************************************************************************
Start LINUX
Status: Appears to work
************************************************************************
zender@dust:~/nco$ pvmgetarch;uname -a;~/nco/autobld/config.guess
LINUX
Linux dust.ess.uci.edu 2.4.19-pre8 #1 SMP Wed May 8 10:16:29 PDT 2002 i686 unknown

gcc/g++ Zender uses this to install/update NCO in personal directories:
export GNU_TRP=`~/nco/autobld/config.guess`
export DODS_ROOT="${DATA}/tmp/DODS"
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
/bin/cp -f libtool libtool.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo libtool.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

gcc/g++ Sysadmins: use this to install/update NCO in /usr/local
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
./configure --enable-optimize-custom --prefix=/usr/local > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
/bin/cp -f libtool libtool.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
sudo make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo libtool.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

gcc/g++ Developers use --enable-maintainer-mode to verify auto-tools work correctly, and to mandate rebuilding of "special files" (ncap_yacc.c, ncap_lex.c) correctly:
(requires complete, up-to-date, GNU development toolchain):
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
aclocal # Create aclocal.m4 from acinclude.m4
autoheader # Create config.h.in from configure.in
automake --foreign # Create Makefile.in from Makefile.am
autoconf # Create ./configure from ./configure.in
# Debugging
./configure --disable-shared --enable-debug-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
# Production
./configure --enable-maintainer-mode --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
/bin/cp -f libtool libtool.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo libtool.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

como:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='como --c99' CXX='como' ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

icc:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='icc' CXX='icc' ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example:
gcc  -DLINUX -DNO_NETCDF_2 -DVERSION='20020819' -DHOSTNAME='dust.ess.uci.edu' -DUSER='zender' -Di386 -I/usr/local/include -U_OPENMP -Wall -O -c ../src/nco/nco_att_utl.c -o /home/zender/obj/LINUX/nco_att_utl.o
New build example:
gcc -DHAVE_CONFIG_H -I. -I. -I../.. -I/usr/local/include -g -O2 -c nco_att_utl.c  -fPIC -DPIC -o .libs/nco_att_utl.lo
************************************************************************
End LINUX
************************************************************************

************************************************************************
Start LINUXAMD64
Status: Appears to work. Make sure to compile netCDF with CFLAGS+='-fPIC'
************************************************************************
zender@sand:~/nco/bld$ ./pvmgetarch;uname -a;~/nco/autobld/config.guess
LINUXAMD64
Linux sand 2.4.21-201-smp #1 SMP Wed Feb 18 19:17:53 UTC 2004 x86_64 x86_64 x86_64 GNU/Linux
x86_64-unknown-linux-gnu

gcc/g++ Regular users, sysadmins use this to install/update NCO:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
./configure --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
/bin/cp -f libtool libtool.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo libtool.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

pgcc/pgCC:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='pgcc' CFLAGS='-fast -fPIC' CXX='pgCC' CXXFLAGS='-fast -fPIC' ./configure --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
/bin/cp -f libtool libtool.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo libtool.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr
************************************************************************
End LINUXAMD64
************************************************************************

************************************************************************
Start LINUXALPHA
Status: Appears to work (of course C++ compiler requires valarray)
************************************************************************
zender@ess1:/usr/home/zender/nco$ pvmgetarch;uname -a;~/nco/autobld/config.guess
LINUXALPHA
Linux ess1.ess.uci.edu 2.2.15 #1 Thu May 18 17:22:29 EDT 2000 alpha unknown

export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

zender@usf-cf-alpha-linux-1:~/nco/bld$ ./pvmgetarch;uname -a;~/nco/autobld/config.guess
LINUXALPHA
Linux usf-cf-alpha-linux-1 2.4.17 #1 SMP Fri Jan 4 13:37:30 PST 2002 alpha unknown

export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
NETCDF_INC=${HOME}/include NETCDF_LIB=${HOME}/lib/${GNU_TRP} ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${HOME}/bin/${GNU_TRP} --datadir=${HOME}/nco/data --libdir=${HOME}/lib/${GNU_TRP} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example:
************************************************************************
End LINUXALPHA
************************************************************************

************************************************************************
Start LINUXPPC
Status: tst fails to find in.nc
************************************************************************
zender@usf-cf-ppc-linux-1:~/nco/bld$ ./pvmgetarch;uname -a;~/nco/autobld/config.guess
UNKNOWN
Linux usf-cf-ppc-linux-1 2.2.17-pre1 #2 SMP Fri Jun 16 12:39:25 MDT 2000 ppc unknown

gcc/g++:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
NETCDF_INC=${HOME}/include NETCDF_LIB=${HOME}/lib/${GNU_TRP} ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${HOME}/bin/${GNU_TRP} --datadir=${HOME}/nco/data --libdir=${HOME}/lib/${GNU_TRP} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example:
New build example:
make[3]: Entering directory `/home/users/z/ze/zender/nco/src/nco_c++'
libnco_c++ version "2.6.2" built Aug 27 2002 on usf-cf-ppc-1-1 by zender
nco_err_exit(): ERROR netCDF library returned error code 2
nco_err_exit(): ERROR nco_open
No such file or directory
nco_err_exit(): Failed to open in.nc
FAIL: tst
===================
1 of 1 tests failed
===================

************************************************************************
End LINUXPPC
************************************************************************

************************************************************************
Start LINUXSPARC64
Status: Appears to build correctly
************************************************************************
zender@usf-cf-sparc-linux-1:~/nco/bld$ ./pvmgetarch;uname -a;~/nco/autobld/config.guess
UNKNOWN
Linux usf-cf-sparc-linux-1 2.4.18 #2 Thu Apr 11 14:37:17 EDT 2002 sparc64 unknown

gcc/g++:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
NETCDF_INC=${HOME}/include NETCDF_LIB=${HOME}/lib/${GNU_TRP} ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${HOME}/bin/${GNU_TRP} --datadir=${HOME}/nco/data --libdir=${HOME}/lib/${GNU_TRP} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example:
New build example:
************************************************************************
End LINUXSPARC64
************************************************************************

************************************************************************
Start MACOSX
Status: works.  rorik Thu Oct 30 12:09:15 AKST 2003
************************************************************************
bash-2.05a$ ./pvmgetarch;uname -a;~/nco/autobld/config.guess
UNKNOWN
Darwin usf-cf-ppc-macosx-1 5.5 Darwin Kernel Version 5.5: Thu May 30 14:51:26 PDT 2002; root:xnu/xnu-201.42.3.obj~1/RELEASE_PPC  Power Macintosh powerpc

gcc/g++:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
NETCDF_INC=${HOME}/include NETCDF_LIB=${HOME}/lib/${GNU_TRP} ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${HOME}/bin/${GNU_TRP} --datadir=${HOME}/nco/data --libdir=${HOME}/lib/${GNU_TRP} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example:

New build example:
************************************************************************
End MACOSX
************************************************************************

************************************************************************
Start SGIMP64
Status: -LANG:std not passed to final CC link command for tst.o
************************************************************************
zender@krein:~/nco$ pvmgetarch;uname -a;~/nco/autobld/config.guess
SGIMP64
IRIX64 krein 6.5 10100655 IP27 mips

cc/CC ABI64:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='cc' CFLAGS='-64 -mips4' CXX='CC -LANG:std' CXXFLAGS='-64 -mips4 -LANG:std' NETCDF_INC='/usr/local/include' LDFLAGS='-LANG:std' ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

cc/CC ABI32:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='cc' CXX='CC' CXXFLAGS='-LANG:std' NETCDF_INC='/usr/local/include' LDFLAGS='-LANG:std' NETCDF_LIB='/usr/local/lib32/r4i4' ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

gcc/g++ ABI32:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='gcc' CXX='g++' NETCDF_INC='/usr/local/include' ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example: (Default is ABI64 on this platform)
cc  -DSGIMP64 -DNO_NETCDF_2 -DVERSION='20020819' -DHOSTNAME='krein.math.uci.edu' -DUSER='zender' -I/usr/local/include -U_OPENMP -64 -mips4 -O2 -c ../src/nco/nco_att_utl.c -o /home/ess/zender/zender/obj/SGIMP64/nco_att_utl.o
cc -o /home/ess/zender/zender/bin/SGIMP64/ncbo /home/ess/zender/zender/obj/SGIMP64/ncbo.o -64 -mips4 -L/home/ess/zender/zender/lib/SGIMP64 -L/usr/local/lib -lnco -lnetcdf -lm

New build example:
cc/CC:
CC -64 -mips4 -o .libs/tst tst.o  -L/usr/local/lib /home/ess/zender/zender/nco/src/nco_c++/.libs/libnco_c++.so -lsocket -lintl -lm -lnetcdf -Wl,-rpath -Wl,/home/ess/zender/zender/lib/SGIMP64
ld64: WARNING 84 : /usr/lib64/libsocket.so is not used for resolving any symbol.
ld64: WARNING 84 : /usr/local/lib/libintl.a is not used for resolving any symbol.
ld64: WARNING 84 : /usr/lib64/mips4/libm.so is not used for resolving any symbol.
ld64: WARNING 84 : /usr/local/lib/libnetcdf.a is not used for resolving any symbol.
ld64: ERROR   33 : Unresolved text symbol "std::ios_base::_M_throw_failure(void)" -- 1st referenced by tst.o.


gcc/g++: Unable to compile ncap_yacc because of bison prototype problems
zender@krein:~/nco/src/nco$ gcc -DHAVE_CONFIG_H -I. -I. -I../..   -I/usr/local/include  -g -O2 -mabi=64 -c ncap_yacc.c
/usr/freeware/share/bison.simple: In function `yyparse':
/usr/freeware/share/bison.simple:219: number of arguments doesn't match prototype
/usr/freeware/share/bison.simple:153: prototype declaration
ze

************************************************************************
End SGIMP64
************************************************************************

************************************************************************
Start SUNMP
Status: 
Works fine with native compilers
************************************************************************
zender@flagstaff:~/nco$ pvmgetarch;uname -a;~/nco/autobld/config.guess
SUNMP
SunOS goldhill 5.6 Generic_105181-19 sun4u sparc SUNW,Ultra-2
bash-2.03$ pvmgetarch;uname -a;~/nco/autobld/config.guess
SUNMP
SunOS usf-cf-sparc-solaris-2 5.8 Generic_108528-15 sun4u sparc SUNW,Ultra-60

For ABI=64:
cc/CC:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='/opt/SUNWspro/bin/cc' CXX='/opt/SUNWspro/bin/CC' FC='/opt/SUNWspro/bin/f90' ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man --disable-hdf5 > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

For ABI=32:
cc/CC:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='/opt/SUNWspro/bin/cc' CXX='/opt/SUNWspro/bin/CC' LD='/usr/ccs/bin/ld -z muldefs' LDFLAGS='-z muldefs -L/opt/SUNWspro/lib' ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man --disable-hdf5 > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

gcc/g++:
export GNU_TRP=`~/nco/autobld/config.guess`
cd ~/nco;/bin/rm -f *.${GNU_TRP}.foo;make distclean
CC='gcc' CXX='g++' ./configure --enable-optimize-custom --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man --disable-hdf5 > nco.configure.${GNU_TRP}.foo 2>&1
/bin/cp -f config.log nco.config.log.${GNU_TRP}.foo
make clean;make > nco.make.${GNU_TRP}.foo 2>&1
make check >> nco.make.${GNU_TRP}.foo 2>&1
make install >> nco.make.${GNU_TRP}.foo 2>&1
scp nco.configure.${GNU_TRP}.foo nco.config.log.${GNU_TRP}.foo nco.make.${GNU_TRP}.foo dust.ess.uci.edu:/var/www/html/nco/rgr

Old build example:

New build example:
gcc -DHAVE_CONFIG_H -I. -I. -I../.. -I/home/zender/include -g -O2 -MT nco_fl_utl.lo -MD -MP -MF
 .deps/nco_fl_utl.Tpo -c nco_fl_utl.c  -fPIC -DPIC -o .libs/nco_fl_utl.o
In file included from nco_fl_utl.h:24,
                 from nco_fl_utl.c:9:
/usr/include/sys/stat.h:253: parse error before "blksize_t"
/usr/include/sys/stat.h:257: parse error before '}' token
/usr/include/sys/stat.h:313: parse error before "blksize_t"
/usr/include/sys/stat.h:314: conflicting types for `st_blocks'
/usr/include/sys/stat.h:254: previous declaration of `st_blocks'
/usr/include/sys/stat.h:317: parse error before '}' token
nco_fl_utl.c: In function `nco_fl_mk_lcl':
nco_fl_utl.c:186: storage size of `stat_sct' isn't known
nco_fl_utl.c: In function `nco_fl_out_open':
nco_fl_utl.c:702: storage size of `stat_sct' isn't known

zender@goldhill:~/nco/src/nco_c++$ make check
/opt/SUNWspro/bin/CC -g -o tst tst.o  -L/home/zender/lib/SUNMP /home/zender/lib/SUNMP/libnco_c++.so -lthread -lsocket -lresolv -lintl -lsunmath -lm -lnetcdf -R/home/zender/lib/SUNMP -R/home/zender/lib/SUNMP
ild: (undefined symbol) void __Crun::register_exit_code(void(*)()extern"C") -- referenced in the text segment of /opt/SUNWspro/WS6U2/lib/libCstd.a(pVW_T97SXgbY0vyFZNUb.o)
ild: (undefined symbol) void __Crun::register_exit_code(void(*)()extern"C") -- referenced in the text segment of /opt/SUNWspro/WS6U2/lib/libCstd.a(2yi5kEpmEtUw_3Zz13e2.o)
ild: (undefined symbol) void __Crun::register_exit_code(void(*)()extern"C") -- referenced in the text segment of /opt/SUNWspro/WS6U2/lib/libCstd.a(locale.o)
ild: (undefined symbol) void __Crun::register_exit_code(void(*)()extern"C") -- referenced in the text segment of /opt/SUNWspro/WS6U2/lib/libCstd.a(ios.o)
ild: (undefined symbol) void __Crun::register_exit_code(void(*)()extern"C") -- referenced in the text segment of /opt/SUNWspro/WS6U2/lib/libCstd.a(stdexcept.o)
make[1]: *** [tst] Error 5
make[1]: Leaving directory `/fs/cgd/home0/zender/nco/src/nco_c++'
make: *** [check-am] Error 2


g++ -DHAVE_CONFIG_H -I. -I. -I../..   -I/home/zender/include  -g -O2 -c tst.cc
nco_var.hh: In function `int nco_put_var<prc_cmp>(const int &, const basic_string<char,string_char_traits<char>,__default_alloc_template<false,0> > &, const valarray<float> &)':
tst.cc:155:   instantiated from here
nco_var.hh:270: non-lvalue in unary `&'
In file included from /usr/include/arpa/nameser.h:454,
                 from ../src/nco/nco_fl_utl.h:31,
                 from ../src/nco/nco_fl_utl.c:9:
/usr/include/arpa/nameser_compat.h:93: parse error before string constant

New build example:
When changing from the Workshop 5.0 C++ compiler and the Workshop 6 compiler you get this linker error:

    Undefined                       first referenced
     symbol                             in file
    void __Crun::register_exit_code(void(*)()extern"C")
    obj/sunos5_optimized/MainWin.o
    ld: fatal: Symbol referencing errors. No output written to
    run/sunos5/MyApplication

    FATAL ERROR:** Command: 'CC' failed/aborted.
    exiting ...

This symbol is defined in:

    ..../SUNWspro/WS6/lib/libCrun.a

in the 6.0 compiler but not in WS5.0 compiler. If you remove obj/sunos5_optimized/MainWin.o (and all other object files generated by the previous compiler) this should take care of the error.

This error can also occur if you build objects with the 6.0 compiler but do not modify your LD_LIBRARY_PATH to point to the '..../SUNWspro/WS6/lib' directory in the 6.0 installation.

************************************************************************
End SUNMP
************************************************************************

