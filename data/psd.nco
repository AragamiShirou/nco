// $Header: /data/zender/nco_20150216/nco/data/psd.nco,v 1.4 2006-09-18 19:14:38 zender Exp $ -*-C-*-

// Purpose: ncap script for particle size distributions

/* Usage:
   ncap2 -v -O -D 1 -S ${HOME}/nco/data/psd.nco ${HOME}/nco/data/in.nc ~/foo.nc
   ncks -C -H -u -v dmt_nwa,dmt_saa,dmt_vaa ~/foo.nc */

pi=3.1415926535897932384626433832795029L; // (3.1415926535897932384626433832795029L) [frc] 3
pi@long_name="Pi";
pi@units="fraction";

defdim("dmt",13); // [] Diameter dimension

// fxm: Get array initializing working
//dmt_nma[dmt]={0.1,0.1861,0.2366,0.3009,0.3825,0.4864,0.5915,0.6185,0.7864,0.8281,1.0,1.183,2.366};
dmt_nma[dmt]=0.0; // [um] Number mean diameter analytic
dmt_nma(0)=0.1; 
dmt_nma(1)=0.1861; 
dmt_nma(2)=0.2366; 
dmt_nma(3)=0.3009; 
dmt_nma(4)=0.3825; 
dmt_nma(5)=0.4864; 
dmt_nma(6)=0.5915; 
dmt_nma(7)=0.6185; 
dmt_nma(8)=0.7864; 
dmt_nma(9)=0.8281; 
dmt_nma(10)=1.0; 
dmt_nma(11)=1.183; 
dmt_nma(12)=2.366; 

// Find dmt_nma for which dmt_saa=1.0: 
// ncap -v -O -s "gsd=2.0;dmt_saa=1.0;dmt_nma=dmt_saa*exp(-1.0*(ln(gsd))^2.0);" ${HOME}/nco/data/in.nc ~/foo.nc;ncks -H -C -u ~/foo.nc
// Find dmt_nma for which dmt_vaa=1.0: 
// ncap -v -O -s "gsd=2.0;dmt_vaa=1.0;dmt_nma=dmt_vaa*exp(-1.5*(ln(gsd))^2.0);" ${HOME}/nco/data/in.nc ~/foo.nc;ncks -H -C -u ~/foo.nc

// Set coordinate equal to number median diamter for now
dmt[dmt]=dmt_nma; // [um] Diameter coordinate

// Compute fraction of lognormal distribution that lies between two endpoints
gsd=2.0; // [frc] Geometric standard deviation
gsd@long_name="Geometric standard deviation";
gsd@units="fraction";

dmt_naa=dmt_nma*exp(0.5*(ln(gsd))^2.0); // [um] Number mean diameter analytic
dmt_nwa=dmt_nma*exp(0.5*(ln(gsd))^2.0); // [um] Number weighted mean diameter analytic
dmt_saa=dmt_nma*exp(1.0*(ln(gsd))^2.0); // [um] Surface area mean diameter analytic
dmt_vaa=dmt_nma*exp(1.5*(ln(gsd))^2.0); // [um] Volume mean diameter analytic
dmt_sma[dmt]=dmt_nma*exp(2.0*(ln(gsd))^2.0); // [um] Surface area median diameter analytic
dmt_swa[dmt]=dmt_nma*exp(2.5*(ln(gsd))^2.0); // [um] Surface area weighted mean diameter analytic
dmt_vma[dmt]=dmt_nma*exp(3.0*(ln(gsd))^2.0); // [um] Volume median diameter analytic
dmt_vwa[dmt]=dmt_nma*exp(3.5*(ln(gsd))^2.0); // [um] Volume weighted mean diameter analytic

dmt_naa@long_name="Number mean diameter analytic";
dmt_naa@units="micron";
dmt_nma@long_name="Number median diameter analytic";
dmt_nma@units="micron";
dmt_nwa@long_name="Number weighted mean diameter analytic";
dmt_nwa@units="micron";
dmt_saa@long_name="Surface area mean diameter analytic";
dmt_saa@units="micron";
dmt_sma@long_name="Surface area median diameter analytic";
dmt_sma@units="micron";
dmt_swa@long_name="Surface area weighted mean diameter analytic";
dmt_swa@units="micron";
dmt_vaa@long_name="Volume mean diameter analytic";
dmt_vaa@units="micron";
dmt_vma@long_name="Volume median diameter analytic";
dmt_vma@units="micron";
dmt_vwa@long_name="Volume weighted mean diameter analytic";
dmt_vwa@units="micron";

dmt_min[dmt]=5.0; // [um] Minimum diameter
dmt_min@long_name="Minimum diameter";
dmt_min@units="micron";

dmt_max[dmt]=10.0; // [um] Maximum diameter
dmt_max@long_name="Maximum diameter";
dmt_max@units="micron";

// ncap2 -v -O -s "gsd=2.0;dmt_vma=2.5;dmt_min=5.0;dmt_max=10.0;ovr_frc=0.5*(erf(log(dmt_max/dmt_vma)/(sqrt(2.0)*log(gsd)))-erf(log(dmt_min/dmt_vma)/(sqrt(2.0)*log(gsd))))));" ${HOME}/nco/data/in.nc ~/foo.nc;ncks -H -C -u ~/foo.nc
ovr_frc=0.5*(erf(log(dmt_max/dmt_vma)/(sqrt(2.0)*log(gsd)))-erf(log(dmt_min/dmt_vma)/(sqrt(2.0)*log(gsd)))); // [frc] Fraction of lognormal distribution between endpoints
ovr_frc@long_name="Fraction of lognormal distribution between endpoints";
ovr_frc@units="fraction";

/*
foo=; // 
foo@long_name="";
foo@units="";
*/
