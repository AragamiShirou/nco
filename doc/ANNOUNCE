$Header: /data/zender/nco_20150216/nco/doc/ANNOUNCE,v 1.752 2014-11-05 23:39:04 zender Exp $ -*-text-*-

The netCDF Operators NCO version 4.4.7 are ready. 

http://nco.sf.net (Homepage)
http://dust.ess.uci.edu/nco (Homepage "mirror")

This is a bugfix release. 
For these reasons alone, we recommend that users of
ncrename upgrade to 4.4.7. 

Work on NCO 4.4.7 is underway, still focused on stability and speed.   
This includes more netCDF4 mop-up and new chunking features.

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. Hyperslabs specifications now accept -1 (negative one) to indicate
   the last element of a dimension. This is consistent with Python
   syntax, unless NCO's previous behavior (from 20120709--20141001)
   where negative integers indicated the number of  elements from the
   last (-1 is penultimate, -0 is ultimate). Now -1 is last element,
   -2 is penultimate element, -N is first element. NCO prints a
   warning to alert users who may expect the old behavior.
   ncks -d lon,1,-1 in.nc out.nc # Second through last longitude
   http://nco.sf.net/nco.html#hyp

A. The minimum size of variables to chunk may now be specified with
   --cnk_min=var_sz, where var_sz is the minimum size in bytes (not
   elements) of variables to chunk. This threshold is intended to
   restrict use of chunking to variables for which it is efficient. 
   By default this minimum variable size for chunking is 8192 B.
   To obtain a system-dependent minimum size, set cnk_min=0 and then
   NCO will compute the minimum size as twice the system blocksize
   (when available) and 8192 bytes otherwise.
   ncks in.nc out.nc # Minimum variable size to chunk is 8192 B
   ncks --cnk_min=1 in.nc out.nc # Minimum size is 1 B
   ncks --cnk_min=0 in.nc out.nc # Minimum size is twice blocksize
   http://nco.sf.net/nco.html#cnk

A. ncap2 creates record dimension when dimension size is negative: 
   ncap2 -s 'defdim("time",10)'  in.nc out.nc # Fixed-size dimension
   ncap2 -s 'defdim("time",-10)' in.nc out.nc # Record dimension
   Formerly ncap2 had no way to create new record dimensions.
   http://nco.sf.net/nco.html#ncap2

BUG FIXES:

A. ncrename fxm
   Thanks to Parker Allen for reporting this.
   http://nco.sf.net#bug_nc4_rename

A. Auxiliary coordinate hyperslabbing (with -X) was inadvertly
   turned-off for 1-D variables. Now it works fine with 1-D vars.
   Moreover, files without a "Conventions=CF-1.X" attribute are now
   treated as if they had the attribute to exploit -X functionality. 
   Thanks to romzie04 for alerting us to these -X issues.

KNOWN PROBLEMS DUE TO NCO:

   This section of ANNOUNCE reports and reminds users of the
   existence and severity of known, not yet fixed, problems. 
   These problems occur with NCO 4.4.7 built/tested with netCDF
   4.3.3-rc2 (20141001) on top of HDF5 hdf5-1.8.13 with:

   cd ~/nco;./configure --enable-netcdf4  # Configure mechanism -or-
   cd ~/nco/bld;make dir;make allinone # Old Makefile mechanism

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 problem? ncrename)
   http://nco.sf.net#bug_nc4_rename

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride

B. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug report filed: https://www.unidata.ucar.edu/jira/browse/NCF-47

C. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Pre-built Debian Sid & Ubuntu packages:
   http://nco.sf.net#debian

B. Pre-built Fedora and CentOS RPMs:
   http://nco.sf.net#rpm

C. Pre-built Mac binaries:
   http://nco.sf.net#mac

D. Pre-built Windows (native) and Cygwin binaries:
   http://nco.sf.net#windows

E. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

