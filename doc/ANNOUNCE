$Header: /data/zender/nco_20150216/nco/doc/ANNOUNCE,v 1.538 2013-02-01 05:56:36 zender Exp $ -*-text-*-

The netCDF operators NCO version 4.2.5 are ready. 

http://nco.sf.net (Homepage)
http://dust.ess.uci.edu/nco (Homepage "mirror")

This release fixes some annoying bugs introduced in 4.2.4:
The ncks switches --mk_rec_dmn and --fix_rec_dmn have been repaired.
Some sub-setting optimizations (MM3, for the wonkish) are also fixed.
Pretty simply, this is a more robust version of 4.2.4.

Work on NCO 4.2.6 is underway and focuses on better support for more
complex netCDF4 files, and on netCDF4 support for ncrename and ncbo
operators. 

Enjoy,
Charlie

"New stuff" in 4.2.5 summary (full details always in ChangeLog):

NEW FEATURES:

A. ncra and ncrcat accept a new switch --record_append that
   significantly speeds concatentating files onto existing files.
   Previously to preserve the existing contents of fl1.nc, and add to
   them the new records contained in fl2.nc, and place the output in a
   third file, fl3.nc (which could safely be named fl2.nc), one did 
   ncrcat -O fl1.nc fl2.nc fl3.nc
   Under the hood this operation copies all of the information
   in fl1.nc and fl2.nc. Twice. This is expensive for large files.
   The new --record_append switch causes all records in fl1.nc to be
   appended to the end of the corresponding records in fl2.nc:
   ncrcat --rec_apn fl1.nc fl2.nc
   The contents of fl2.nc are completely preserved, and only
   values in fl1.nc are copied. --rec_apn automatically puts NCO into
   append mode, so specifying -A is redundant, and simultaneously
   specifying overwrite mode with -O causes an error. 
   By default, NCO works in an intermediate temporary file.
   Power users may combine --rec_apn with --no_tmp_fl:
   ncrcat --rec_apn --no_tmp_fl fl1.nc fl2.nc
   This avoids creating an intermediate file, and copies only the
   minimal amount of data (i.e., all of fl1.nc). Hence, it is fast.
   We recommend users first read the safety trade-offs involved:
   http://nco.sf.net/nco.html#no_tmp_fl
   http://nco.sf.net/nco.html#rec_apn

BUG FIXES:

A. Fix bug introduced in 4.2.4 that causes ncks to ignore --mk_rec_dmn 
   and --fix_rec_dmn options. Thanks to ocehugo for reporting the bug.
   http://nco.sf.net#bug_ncks_mk_rec_dmn

A. Fix bug introduced in 4.2.4 where some sub-setting (-v var)
   operations failed. The were "MM3 copy operations" and  were fixed 
   as a side-effect of the --mk_rec_dmn/--fix_rec_dmn fixes. 

A. ncks prints more accurate netCDF4 metadata summaries in cases where
   variables use dimensions and coordinates defined in ancestor groups.
   Still more work to do on this though.

KNOWN BUGS NOT YET FIXED:

   This section of the ANNOUNCE file reports and reminds users of the
   existence and severity of known, not yet fixed, problems. 
   These problems occur with NCO 4.2.5 built/tested with netCDF
   4.2.1 on top of HDF5 hdf5-1.8.9 with these methods: 

   cd ~/nco;./configure --enable-netcdf4  # Configure mechanism -or-
   cd ~/nco/bld;make dir;make all;make ncap2 # Old Makefile mechanism

A. NOT YET FIXED
   Correctly read netCDF4 input over DAP, write netCDF4 output, then read resulting file.
   Replacing netCDF4 with netCDF3 in either location of preceding sentence leads to success.
   DAP non-transparency: Works locally, fails through DAP server.
   Unclear whether resulting file is "legal" because of dimension ID ordering assumptions

   Demonstration:
   ncks -4 -O -v three_dmn_rec_var http://motherlode.ucar.edu:8080/thredds/dodsC/testdods/in_4.nc ~/foo.nc
   ncks ~/foo.nc # breaks with "NetCDF: Invalid dimension ID or name"

   20120731: Unable to verify since in_4.nc no longer accessible
   Bug report filed: netCDF #QUN-641037: dimension ID ordering assumptions

B. NOT YET FIXED
   netCDF4 library fails when renaming dimension and variable using
   that dimension, in either order. Works fine with netCDF3.
   Problem with netCDF4 library implementation.

   Demonstration:
   ncks -O -4 -v lat_T42 ~/nco/data/in.nc ~/foo.nc
   ncrename -O -D 2 -d lat_T42,lat -v lat_T42,lat ~/foo.nc ~/foo2.nc # Breaks with "NetCDF: HDF error"
   ncks -m ~/foo.nc

   20121025: Verified problem still exists
   Bug report filed: netCDF #YQN-334036: problem renaming dimension and coordinate in netCDF4 file

C. NOT YET FIXED
   Unable to retrieve contents of variables including period '.' in name
   Metadata is returned successfully, data is not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://motherlode.ucar.edu:8080/thredds/dodsC/testdods in.nc # Fails to find variable

   20120731: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Problem hard to fix since DAP interprets '.' as structure delimiter in query string of HTTP requests.

   Bug report filed: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED
   Correctly read scalar characters over.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5 -v md5_a -p http://motherlode.ucar.edu:8080/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element, NUL-terminated strings so MD5 agreement fails

"Sticky" reminders:

A. Pre-built, up-to-date Debian Sid & Ubuntu packages:
   http://nco.sf.net#debian

B. Pre-built Fedora and CentOS RPMs:
   http://nco.sf.net#rpm

C. Pre-built Windows (native) and Cygwin binaries:
   http://nco.sf.net#windows

D. Pre-built AIX binaries:
   http://nco.sf.net#aix

E. Did you try SWAMP (Script Workflow Analysis for MultiProcessing)?
   SWAMP efficiently schedules/executes NCO scripts on remote servers:  

   http://swamp.googlecode.com

   SWAMP can work command-line operator analysis scripts besides NCO. 
   If you must transfer lots of data from a server to your client
   before you analyze it, then SWAMP will likely speed things up. 

F. NCO support for netCDF4 features is tracked at

   http://nco.sf.net/nco.html#nco4

   NCO supports netCDF4 atomic data types, compression, and chunking.

G. Have you seen the NCO logo candidates by Tony Freeman, Rich
   Signell, Rob Hetland, and Andrea Cimatoribus? 
   http://nco.sf.net
   Tell us what you think...

