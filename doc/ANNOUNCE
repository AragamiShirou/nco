$Header: /data/zender/nco_20150216/nco/doc/ANNOUNCE,v 1.317 2009-03-28 00:25:19 zender Exp $ -*-text-*-

The netCDF operators NCO version 3.9.8 are ready. 

http://nco.sf.net (Homepage)
http://dust.ess.uci.edu/nco (Homepage "mirror")

This version primarily improves documentation and build-ability
of the GSL-library functions introduced in ncap2 version 3.9.6.
A list all ncap2 functions/methods appears below.

http://nco.sf.net/nco.html#gsl

Plans for 3.9.8 are underway. Three areas of improvement will be 
generalized sorting, support for GSL distribution functions,
and support for a new DAP library provided by libnetcdf.

A. New NCO logo candidate submitted by Tony Freeman:
   What do you think? Should it replace the mandleblob?
   http://nco.sf.net/logo_pch.png

B. Improve ./configure ability to find and work with GSL, including
   older versions of GSL
   
C. ncap2 can assign non-scalar variables on the LHS to a RHS scalar
   e.g., var=three_dmn_var_dbl; // Define var as a 3-D variable
   	 var=20; // Fill all (non-missing) values with 20
   http://nco.sf.net/nco.html#xmp_ncap

D. Restrict most operators to four threads default maximum,
   ncecat and ncrcat to two, and ncap2 to one. -t thr_nbr overrides.
   http://nco.sf.net/nco.html#openmp

F. ncap2 sort() function improved...fxm

G. Remove assumption that DAP means OPeNDAP. 
   Configure takes either --enable-dap-opendap or --enable-dap-netcdf
   bld/Makefile takes either DAP_OPENDAP=Y or DAP_NETCDF=Y (untested)

K. Pre-built, up-to-date Debian Sid & Ubuntu Intrepid packages:
   http://nco.sf.net#debian

L. Pre-built (possibly out-of-date) Fedora and CentOS RPMs:
   http://nco.sf.net#rpm

M. Find/add NCO tips and tricks on the NCO Wiki (thanks to Tom Roche):

   http://nco.wiki.sourceforge.net

N. Did you try SWAMP (Script Workflow Analysis for MultiProcessing)?
   SWAMP efficiently schedules/executes NCO scripts on remote servers:  

   http://swamp.googlecode.com

   SWAMP can work command-line operator analysis scripts besides NCO. 
   If you must transfer lots of data from a server to your client
   before you analyze it, then SWAMP may speed things up. 
   Try SWAMP give us your feedback.

O. Reminder: NCO support for netCDF4 features is tracked at

   http://nco.sf.net/nco.html#nco4

   NCO currently supports netCDF4 atomic data types and compression.
   NCO 3.9.8 with netCDF4 support should work with HDF5 1.8.1
   and netCDF4 final and newer.

   export NETCDF4_ROOT=/usr/local/netcdf4 # Set netCDF4 location
   cd ~/nco;./configure --enable-netcdf4  # Configure mechanism -or-
   cd ~/nco/bld;./make NETCDF4=Y allinone # Old Makefile mechanism

Enjoy,
Charlie
 
acos()                     
acosh()                    
asin()                     
asinh()                    
atan()                     
atan2()                    
atanh()                    
avg()                      
avgsqr()                   
byte()                     
ceil()                     
change_miss()              
char()                     
convert()                  
cos()                      
cosh()                     
delete_miss()              
double()                   
erf()                      
erfc()                     
exp()                      
fabs()                     
float()                    
floor()                    
gamma()                    
get_miss()                 
gsl_sf_Chi()               
gsl_sf_Ci()                
gsl_sf_Shi()               
gsl_sf_Si()                
gsl_sf_airy_Ai()           
gsl_sf_airy_Ai_deriv()     
gsl_sf_airy_Ai_deriv_scaled()
gsl_sf_airy_Ai_scaled()      
gsl_sf_airy_Bi()             
gsl_sf_airy_Bi_deriv()       
gsl_sf_airy_Bi_deriv_scaled()
gsl_sf_airy_Bi_scaled()      
gsl_sf_airy_zero_Ai()        
gsl_sf_airy_zero_Ai_deriv()  
gsl_sf_airy_zero_Bi()        
gsl_sf_airy_zero_Bi_deriv()  
gsl_sf_atanint()             
gsl_sf_bessel_I0()           
gsl_sf_bessel_I0_scaled()    
gsl_sf_bessel_I1()           
gsl_sf_bessel_I1_scaled()    
gsl_sf_bessel_In()           
gsl_sf_bessel_In_array()     
gsl_sf_bessel_In_scaled()    
gsl_sf_bessel_In_scaled_array()
gsl_sf_bessel_Inu()            
gsl_sf_bessel_Inu_scaled()     
gsl_sf_bessel_J0()             
gsl_sf_bessel_J1()             
gsl_sf_bessel_Jn()             
gsl_sf_bessel_Jn_array()       
gsl_sf_bessel_Jnu()            
gsl_sf_bessel_K0()             
gsl_sf_bessel_K0_scaled()      
gsl_sf_bessel_K1()             
gsl_sf_bessel_K1_scaled()      
gsl_sf_bessel_Kn()             
gsl_sf_bessel_Kn_array()       
gsl_sf_bessel_Kn_scaled()      
gsl_sf_bessel_Kn_scaled_array()
gsl_sf_bessel_Knu()            
gsl_sf_bessel_Knu_scaled()     
gsl_sf_bessel_Y0()             
gsl_sf_bessel_Y1()             
gsl_sf_bessel_Yn()             
gsl_sf_bessel_Yn_array()       
gsl_sf_bessel_Ynu()            
gsl_sf_bessel_i0_scaled()      
gsl_sf_bessel_i1_scaled()      
gsl_sf_bessel_i2_scaled()      
gsl_sf_bessel_il_scaled()      
gsl_sf_bessel_il_scaled_array()
gsl_sf_bessel_j0()             
gsl_sf_bessel_j1()             
gsl_sf_bessel_j2()             
gsl_sf_bessel_jl()             
gsl_sf_bessel_jl_array()       
gsl_sf_bessel_jl_steed_array() 
gsl_sf_bessel_k0_scaled()      
gsl_sf_bessel_k1_scaled()      
gsl_sf_bessel_k2_scaled()      
gsl_sf_bessel_kl_scaled()      
gsl_sf_bessel_kl_scaled_array()
gsl_sf_bessel_lnKnu()          
gsl_sf_bessel_y0()             
gsl_sf_bessel_y1()             
gsl_sf_bessel_y2()             
gsl_sf_bessel_yl()             
gsl_sf_bessel_yl_array()       
gsl_sf_bessel_zero_J0()        
gsl_sf_bessel_zero_J1()        
gsl_sf_beta()                  
gsl_sf_clausen()               
gsl_sf_conicalP_0()            
gsl_sf_conicalP_1()            
gsl_sf_conicalP_cyl_reg()      
gsl_sf_conicalP_half()         
gsl_sf_conicalP_mhalf()        
gsl_sf_conicalP_sph_reg()      
gsl_sf_dawson()                
gsl_sf_debye_1()               
gsl_sf_debye_2()               
gsl_sf_debye_3()               
gsl_sf_debye_4()               
gsl_sf_debye_5()               
gsl_sf_debye_6()               
gsl_sf_doublefact()            
gsl_sf_ellint_D()              
gsl_sf_ellint_Dcomp()          
gsl_sf_ellint_E()              
gsl_sf_ellint_Ecomp()          
gsl_sf_ellint_F()              
gsl_sf_ellint_Kcomp()          
gsl_sf_ellint_P()              
gsl_sf_ellint_Pcomp()          
gsl_sf_ellint_RC()             
gsl_sf_ellint_RD()             
gsl_sf_ellint_RF()             
gsl_sf_ellint_RJ()             
gsl_sf_erf()                   
gsl_sf_erf_Q()                 
gsl_sf_erf_Z()                 
gsl_sf_erfc()                  
gsl_sf_eta()                   
gsl_sf_eta_int()               
gsl_sf_exp()                   
gsl_sf_exp_err()               
gsl_sf_exp_mult()              
gsl_sf_expint_3()              
gsl_sf_expint_E1()             
gsl_sf_expint_E1_scaled()      
gsl_sf_expint_E2()             
gsl_sf_expint_E2_scaled()      
gsl_sf_expint_Ei()             
gsl_sf_expint_Ei_scaled()      
gsl_sf_expint_En()             
gsl_sf_expint_En_scaled()      
gsl_sf_expm1()                 
gsl_sf_exprel()                
gsl_sf_exprel_2()              
gsl_sf_exprel_n()              
gsl_sf_fact()                  
gsl_sf_fermi_dirac_0()         
gsl_sf_fermi_dirac_1()         
gsl_sf_fermi_dirac_2()         
gsl_sf_fermi_dirac_3half()     
gsl_sf_fermi_dirac_half()      
gsl_sf_fermi_dirac_inc_0()     
gsl_sf_fermi_dirac_int()       
gsl_sf_fermi_dirac_m1()        
gsl_sf_fermi_dirac_mhalf()     
gsl_sf_gamma()                 
gsl_sf_gamma_inc()             
gsl_sf_gamma_inc_P()           
gsl_sf_gamma_inc_Q()           
gsl_sf_gammainv()              
gsl_sf_gammastar()             
gsl_sf_gegenpoly_1()           
gsl_sf_gegenpoly_2()           
gsl_sf_gegenpoly_3()           
gsl_sf_gegenpoly_n()           
gsl_sf_hazard()                
gsl_sf_hyperg_0F1()            
gsl_sf_hyperg_1F1()            
gsl_sf_hyperg_1F1_int()        
gsl_sf_hyperg_2F0()            
gsl_sf_hyperg_2F1()            
gsl_sf_hyperg_2F1_conj()       
gsl_sf_hyperg_2F1_conj_renorm()
gsl_sf_hyperg_2F1_renorm()     
gsl_sf_hyperg_U()              
gsl_sf_hyperg_U_int()          
gsl_sf_hzeta()                 
gsl_sf_laguerre_1()            
gsl_sf_laguerre_2()            
gsl_sf_laguerre_3()            
gsl_sf_laguerre_n()            
gsl_sf_lambert_W0()            
gsl_sf_lambert_Wm1()           
gsl_sf_legendre_H3d()          
gsl_sf_legendre_H3d_0()        
gsl_sf_legendre_H3d_1()        
gsl_sf_legendre_P1()           
gsl_sf_legendre_P2()           
gsl_sf_legendre_P3()           
gsl_sf_legendre_Pl()           
gsl_sf_legendre_Pl_array()     
gsl_sf_legendre_Plm()          
gsl_sf_legendre_Plm_array()    
gsl_sf_legendre_Q0()           
gsl_sf_legendre_Q1()           
gsl_sf_legendre_Ql()           
gsl_sf_legendre_sphPlm()       
gsl_sf_legendre_sphPlm_array() 
gsl_sf_lnbeta()                
gsl_sf_lndoublefact()          
gsl_sf_lnfact()                
gsl_sf_lngamma()               
gsl_sf_lnpoch()                
gsl_sf_log()                   
gsl_sf_log_1plusx()            
gsl_sf_log_1plusx_mx()         
gsl_sf_log_abs()               
gsl_sf_log_erfc()              
gsl_sf_poch()                  
gsl_sf_pochrel()               
gsl_sf_psi()                   
gsl_sf_psi_1()                 
gsl_sf_psi_1_int()             
gsl_sf_psi_1piy()              
gsl_sf_psi_int()               
gsl_sf_psi_n()                 
gsl_sf_synchrotron_1()         
gsl_sf_synchrotron_2()         
gsl_sf_taylorcoeff()           
gsl_sf_transport_2()           
gsl_sf_transport_3()           
gsl_sf_transport_4()           
gsl_sf_transport_5()           
gsl_sf_zeta()                  
gsl_sf_zeta_int()              
gsl_sf_zetam1()                
gsl_sf_zetam1_int()            
int()                          
int64()                        
ln()                           
log()                          
log10()                        
long()                         
mask()                         
mask_clip()                    
max()                          
min()                          
ndims()                        
pack()                         
pack_byte()
pack_char()
pack_int()
pack_short()
permute()
pow()
ram_delete()
ram_write()
reverse()
rms()
rmssdn()
set_miss()
short()
sin()
sinh()
size()
sqravg()
sqrt()
tan()
tanh()
total()
ttl()
type()
ubyte()
uint()
uint64()
unpack()
ushort()
