$Header$ -*-text-*-

The netCDF Operators NCO version 4.7.4 have hatched.

http://nco.sf.net (Homepage, Mailing lists, Help)
http://github.com/nco (Source Code, Issues, Releases, Developers)

What's new?
Version 4.7.4 updates handling of the netCDF CDF5 bug, improves
filename sanitization, supports ESMF 7.1.0r regridding features,
handles non-atomic types more gracefully, and implements absolute
and relative paths for CF2-Group compliance.

Work on NCO 4.7.5 has commenced. Goals include printing some user
defined types, parallel weight generation by ncremap, and possibly
workarounds for using quotation marks with ncap2 in Windows. 

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. netCDF 4.6.1 fixes the CDF5 bug. Yay!
   We strongly recommend that all CDF5 users upgrade to netCDF 4.6.1.
   NCO error messages and HINTs have been updated to better describe
   the best practices to identify and avoid this nasty bug.
   http://nco.sf.net#bug_cdf5

B. NCO supports absolute and relative paths to out-of-group (OOG)
   variables in CF attributes as per CF2-Group draft specification:
   https://docs.google.com/document/d/1KK6IZ2ZmpaUTVgrw-GlFd6almppjvGz6D7nxVTO3BtI/edit
   This feature completes NCO support for the CF2-Group extension.
   Sentinel-5P TROPOMI datasets, for example, require this feature.
   ncks -O -v aerosol_index_340_380 ~/S5P.nc
   Thanks to ESA, NILU, and KNMI folks, especially Maarten Schmidt,
   for reporting this issue. 

C. ncremap supports three new features of ESMF 7.1.0r: a second-order
   conservative regridding algorithm, extrapolation methods for
   unmapped gridcells, and degenerate source gridcells.
   Each of these new features is documented in the manual.
   Their invocation forms are as expected, e.g.:
   ncremap -a conserve2nd  -d dst.nc in.nc out.nc
   ncremap --xtr_mth=idavg -d dst.nc in.nc out.nc
   These two options _require_ ESMF 7.1.0r or later.
   ncremap does not set the ESMF_RegridWeightGen --ignore_degenerate  
   option by default, since it is new and would break workflows on
   installations that upgraded NCO but not ESMF (this is common). 
   However, ERWG 7.1.0r requires --ignore_degenerate to successfully
   regrid some datasets (e.g., CICE) that previous ERWG versions
   handle fine. Hence ncremap 4.7.4 may error on such datasets. 
   The workaround (with ESMF 7.1.0r) is to explicitly pass the base
   ERWG options with ncremap's --esmf_opt option:    
   ncremap --esmf_opt='--ignore_unmapped --ignore_degenerate' ...
   http://nco.sf.net/nco.html#ncremap

D. ncremap guesses the unstructured dimension is first dimension with
   size n_a in input map file src_grid_dims[0]. Previously ncremap
   required that the unstructured dimension, if any, be pre-stored in
   an internal database of common dimension names, or be specified on
   the command line. Now, if neither of these is done, ncremap tries
   the first dimension in the input data file with the same size that
   the supplied input mapping file, if any, expects. 
   ncremap -m map.nc unstructured.nc out.nc
   http://nco.sf.net/nco.html#ncremap   
   Thanks to Philip Cameron-Smith for suggesting this feature.

E. Add "gridcell" to ncremap database of unstructured dimensions.
   This can help when regridding some CMIP6 boundary datasets. 
   This is a less elegant solution than, though comlementary to,
   PJCS's suggestion above.

F. ncap2 where() terminates if the LHS variable in the assignment
   statement is a hyperslab.  Previously where() ignored LHS
   hyperslabs and the results confused users. The manual now clarifies 
   how to use where() with hyperslabs:
   http://nco.sf.net/nco.html#where

BUG FIXES:

A. Skip-over rather than fail when printing user-defined types.
   Sentinel-5P TROPOMI datasets, for example, require this feature.

Full release statement at http://nco.sf.net/ANNOUNCE

KNOWN PROBLEMS DUE TO NCO:

   This section of ANNOUNCE reports and reminds users of the
   existence and severity of known, not yet fixed, problems. 
   These problems occur with NCO 4.7.4 built/tested under
   MacOS 10.13.2 with netCDF 4.4.1.1 on HDF5 1.10.1 and with
   Linux with netCDF 4.6.2-development (20180315) on HDF5 1.8.19.

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride

B. NOT YET FIXED (netCDF4 library bug)
   Simultaneously renaming multiple dimensions in netCDF4 file can corrupt output

   Demonstration:
   ncrename -O -d lev,z -d lat,y -d lon,x ~/nco/data/in_grp.nc ~/foo.nc # Completes but file is unreadable
   ncks -v one ~/foo.nc

   20150922: Confirmed problem reported by Isabelle Dast, reported to Unidata
   20150924: Unidata confirmed problem
   20160212: Verified problem still exists in netCDF library
   20160512: Ditto
   20161028: Verified problem still exists with netCDF 4.4.1
   20170323: Verified problem still exists with netCDF 4.4.2-development
   20170323: https://github.com/Unidata/netcdf-c/issues/381
   20171102: Verified problem still exists with netCDF 4.5.1-development
   20171107: https://github.com/Unidata/netcdf-c/issues/597
   Bug tracking: https://www.unidata.ucar.edu/jira/browse/fxm
   More details: http://nco.sf.net/nco.html#ncrename_crd

C. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug tracking: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

B. Pre-built executables for many OS's at:
   http://nco.sf.net#bnr

