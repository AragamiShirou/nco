$Header: /data/zender/nco_20150216/nco/doc/ANNOUNCE,v 1.578 2013-07-05 22:20:29 zender Exp $ -*-text-*-

The netCDF Operators NCO version 4.3.2 are ready. 

http://nco.sf.net (Homepage)
http://dust.ess.uci.edu/nco (Homepage "mirror")

Did you enjoy the break after a rapid string of NCO releases?
Good, because it's over. The current release brings group support
to two more operators, ncflint and ncpdq. Now five operators fully
support group hierarchies: ncbo, ncecat, ncflint, ncks, and ncpdq. 
There is also a long-overdue bugfix for support of CF "coordinates"
attributes which is how NCO understands Reduced Horizontal Grids and  
Unstructured Grids.

Work on NCO 4.3.2 is underway and includes improved netCDF4 support
for more NCO operators (ncwa, ncra, ncea, ncrcat), and better support
for Windows builds (enabling DAP and UDUnits by default).   

Enjoy,
Charlie

"New stuff" in 4.3.2 summary (full details always in ChangeLog):

NEW FEATURES:

A. NCO takes advantage of improved Windows support in netCDF 4.3.0+.
   NCO executables built with Visual Studio on Windows now support
   OPenDAP. Formerly it was much more difficult to obtain
   OPenDAP support on MS Windows.
   http://nco.sf.net/nco.html#wnd

A. ncflint and ncpdq now supports groups, Group Path Editing (GPE) and
   list unions, the same options supported by ncbo, ncecat, and ncks. 
   Features are controlled by -g, -G and --union, respectively.
   ncflint -g g1 -v v1 --union -G dude -w 0.5 -O -p ~/nco/data in_grp.nc in_grp.nc ~/foo.nc
   ncpdq -g g1 -v v1 --union -G dude -O -p ~/nco/data in_grp.nc ~/foo.nc
   http://nco.sf.net/nco.html#ncflint
   http://nco.sf.net/nco.html#ncpdq
   http://nco.sf.net/nco.html#gpe
   http://nco.sf.net/nco.html#union

BUG FIXES:

A. Fixed ncks auxiliary coordinate (-X) bug introduced in ~4.2.0.  
   What we call auxiliary coordinates are what CF defines as the
   variables stored in the "coordinates" attributes of variables.
   These make possible easy analysis of Reduced/Unstructured Grids. 
   Auxiliary coordinates do not work in ncks versions 4.2.0-4.3.1,
   though they do work in the other hyperslabbing NCO operators.
   Auxiliary coordinates now also work in netCDF4 group files.
   ncks -O -X 0.,180.,-30.,30. -v gds_3dvar ~/nco/data/in.nc ~/foo.nc
   http://nco.sf.net#bug_ncks_aux

A. Global history attribute once again always works in ncecat

KNOWN BUGS NOT YET FIXED:

   This section of ANNOUNCE reports and reminds users of the
   existence and severity of known, not yet fixed, problems. 
   These problems occur with NCO 4.3.2 built/tested with netCDF
   4.3.0-rc4 on top of HDF5 hdf5-1.8.9 with these methods: 

   cd ~/nco;./configure --enable-netcdf4  # Configure mechanism -or-
   cd ~/nco/bld;make dir;make all;make ncap2 # Old Makefile mechanism

A. NOT YET FIXED
   Correctly read netCDF4 input over DAP, write netCDF4 output, then read resulting file.
   Replacing netCDF4 with netCDF3 in either location of preceding sentence leads to success.
   DAP non-transparency: Works locally, fails through DAP server.
   Unclear whether resulting file is "legal" because of dimension ID ordering assumptions.

   Demonstration:
   ncks -4 -O -v three_dmn_rec_var http://motherlode.ucar.edu:8080/thredds/dodsC/testdods/in_4.nc ~/foo.nc
   ncks ~/foo.nc # breaks with "NetCDF: Invalid dimension ID or name"

   20120731: Unable to verify since in_4.nc no longer accessible on Unidata DAP server
   Bug report filed: netCDF #QUN-641037: dimension ID ordering assumptions

B. NOT YET FIXED
   netCDF4 library fails when renaming dimension and variable using
   that dimension, in either order. Works fine with netCDF3.
   Problem with netCDF4 library implementation.

   Demonstration:
   ncks -O -4 -v lat_T42 ~/nco/data/in.nc ~/foo.nc
   ncrename -O -D 2 -d lat_T42,lat -v lat_T42,lat ~/foo.nc ~/foo2.nc # Breaks with "NetCDF: HDF error"
   ncks -m ~/foo.nc

   20130319: Verified problem still exists
   Bug report filed: netCDF #YQN-334036: problem renaming dimension and coordinate in netCDF4 file

C. NOT YET FIXED (requires change to DAP protocol)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata is returned successfully, data is not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://motherlode.ucar.edu:8080/thredds/dodsC/testdods in.nc # Fails to find variable

   20120731: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug report filed: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (requires change to DAP protocol)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5 -v md5_a -p http://motherlode.ucar.edu:8080/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element, NUL-terminated strings so MD5 agreement fails

"Sticky" reminders:

A. Pre-built, up-to-date Debian Sid & Ubuntu packages:
   http://nco.sf.net#debian

B. Pre-built Fedora and CentOS RPMs:
   http://nco.sf.net#rpm

C. Pre-built Windows (native) and Cygwin binaries:
   http://nco.sf.net#windows

D. Pre-built AIX binaries:
   http://nco.sf.net#aix

E. Did you try SWAMP (Script Workflow Analysis for MultiProcessing)?
   SWAMP efficiently schedules/executes NCO scripts on remote servers:  

   http://swamp.googlecode.com

   SWAMP can work command-line operator analysis scripts besides NCO. 
   If you must transfer lots of data from a server to your client
   before you analyze it, then SWAMP will likely speed things up. 

F. NCO support for netCDF4 features is tracked at

   http://nco.sf.net/nco.html#nco4

   NCO supports netCDF4 atomic data types, compression, chunking, and groups.

G. Reminder that ncks and ncecat work on many common HDF5 datasets, e.g.,
   NASA AURA HIRDLS HDF-EOS5
   NASA ICESat GLAS HDF5
   NASA SBUV HDF5...

