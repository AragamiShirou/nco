#ifndef INC_ncoParserTokenTypes_hpp_
#define INC_ncoParserTokenTypes_hpp_

/* $ANTLR 2.7.6 (20070910): "ncoGrammer.g" -> "ncoParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API ncoParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NULL_NODE = 4,
		BLOCK = 5,
		ARG_LIST = 6,
		DMN_LIST = 7,
		DMN_ARG_LIST = 8,
		LMT_LIST = 9,
		VALUE_LIST = 10,
		FUNC_ARG = 11,
		LMT = 12,
		EXPR = 13,
		FEXPR = 14,
		POST_INC = 15,
		POST_DEC = 16,
		UTIMES = 17,
		SQR2 = 18,
		PROP = 19,
		FOR2 = 20,
		NORET = 21,
		SEMI = 22,
		DEFDIM = 23,
		LPAREN = 24,
		NSTRING = 25,
		COMMA = 26,
		RPAREN = 27,
		WHILE = 28,
		BREAK = 29,
		CONTINUE = 30,
		IF = 31,
		ELSE = 32,
		PRINT = 33,
		VAR_ID = 34,
		ATT_ID = 35,
		LCURL = 36,
		RCURL = 37,
		FOR = 38,
		COLON = 39,
		LSQUARE = 40,
		DIM_ID = 41,
		RSQUARE = 42,
		DIVIDE = 43,
		DIM_MTD_ID = 44,
		DOT = 45,
		FUNC = 46,
		INC = 47,
		DEC = 48,
		LNOT = 49,
		PLUS = 50,
		MINUS = 51,
		TIMES = 52,
		CARET = 53,
		MOD = 54,
		LTHAN = 55,
		GTHAN = 56,
		GEQ = 57,
		LEQ = 58,
		EQ = 59,
		NEQ = 60,
		LAND = 61,
		LOR = 62,
		QUESTION = 63,
		ASSIGN = 64,
		PLUS_ASSIGN = 65,
		MINUS_ASSIGN = 66,
		TIMES_ASSIGN = 67,
		DIVIDE_ASSIGN = 68,
		FLOAT = 69,
		DOUBLE = 70,
		INT = 71,
		BYTE = 72,
		UBYTE = 73,
		SHORT = 74,
		USHORT = 75,
		UINT = 76,
		INT64 = 77,
		UINT64 = 78,
		DIM_ID_SIZE = 79,
		NRootAST = 80,
		SHIFTL = 81,
		SHIFTR = 82,
		QUOTE = 83,
		DGT = 84,
		LPH = 85,
		LPHDGT = 86,
		XPN = 87,
		BLASTOUT = 88,
		UNUSED_OPS = 89,
		Whitespace = 90,
		CXX_COMMENT = 91,
		C_COMMENT = 92,
		NUMBER_DOT = 93,
		NUMBER = 94,
		VAR_ATT = 95,
		VAR_ATT_QT = 96,
		DIM_VAL = 97,
		LMT_DMN = 98,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_ncoParserTokenTypes_hpp_*/
