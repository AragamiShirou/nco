#ifndef INC_ncoParserTokenTypes_hpp_
#define INC_ncoParserTokenTypes_hpp_

/* $ANTLR 2.7.6 (20070220): "ncoGrammer.g" -> "ncoParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API ncoParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NULL_NODE = 4,
		BLOCK = 5,
		ARG_LIST = 6,
		DMN_LIST = 7,
		DMN_ARG_LIST = 8,
		LMT_LIST = 9,
		VALUE_LIST = 10,
		FUNC_ARG = 11,
		LMT = 12,
		EXPR = 13,
		POST_INC = 14,
		POST_DEC = 15,
		SQR2 = 16,
		PROP = 17,
		FOR2 = 18,
		SEMI = 19,
		DEFDIM = 20,
		LPAREN = 21,
		NSTRING = 22,
		COMMA = 23,
		RPAREN = 24,
		WHILE = 25,
		BREAK = 26,
		CONTINUE = 27,
		IF = 28,
		ELSE = 29,
		LCURL = 30,
		RCURL = 31,
		FOR = 32,
		RAM_DELETE = 33,
		VAR_ID = 34,
		ATT_ID = 35,
		RAM_WRITE = 36,
		SET_MISS = 37,
		CH_MISS = 38,
		DIM_ID = 39,
		DIM_MTD_ID = 40,
		FUNC = 41,
		PAVG = 42,
		PAVGSQR = 43,
		PMAX = 44,
		PMIN = 45,
		PRMS = 46,
		PRMSSDN = 47,
		PSQR = 48,
		ARVG = 49,
		PTTL = 50,
		DOT = 51,
		PSIZE = 52,
		PTYPE = 53,
		PNDIMS = 54,
		INC = 55,
		DEC = 56,
		LNOT = 57,
		PLUS = 58,
		MINUS = 59,
		TIMES = 60,
		CARET = 61,
		DIVIDE = 62,
		MOD = 63,
		LTHAN = 64,
		GTHAN = 65,
		GEQ = 66,
		LEQ = 67,
		EQ = 68,
		NEQ = 69,
		LAND = 70,
		LOR = 71,
		QUESTION = 72,
		COLON = 73,
		ASSIGN = 74,
		PLUS_ASSIGN = 75,
		MINUS_ASSIGN = 76,
		TIMES_ASSIGN = 77,
		DIVIDE_ASSIGN = 78,
		LSQUARE = 79,
		RSQUARE = 80,
		FLOAT = 81,
		DOUBLE = 82,
		INT = 83,
		BYTE = 84,
		SHORT = 85,
		USHORT = 86,
		UINT = 87,
		INT64 = 88,
		UINT64 = 89,
		DIM_ID_SIZE = 90,
		NRootAST = 91,
		SHIFTL = 92,
		SHIFTR = 93,
		PSQRAVG = 94,
		QUOTE = 95,
		DGT = 96,
		LPH = 97,
		LPHDGT = 98,
		XPN = 99,
		BLASTOUT = 100,
		UNUSED_OPS = 101,
		Whitespace = 102,
		CXX_COMMENT = 103,
		C_COMMENT = 104,
		NUMBER_DOT = 105,
		NUMBER = 106,
		VAR_ATT = 107,
		VAR_ATT_QT = 108,
		DIM_VAL = 109,
		LMT_DMN = 110,
		UBYTE = 111,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_ncoParserTokenTypes_hpp_*/
