#ifndef INC_ncoParserTokenTypes_hpp_
#define INC_ncoParserTokenTypes_hpp_

/* $ANTLR 2.7.6 (20070220): "ncoGrammer.g" -> "ncoParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API ncoParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NULL_NODE = 4,
		BLOCK = 5,
		ARG_LIST = 6,
		DMN_LIST = 7,
		DMN_ARG_LIST = 8,
		LMT_LIST = 9,
		VALUE_LIST = 10,
		FUNC_ARG = 11,
		LMT = 12,
		EXPR = 13,
		POST_INC = 14,
		POST_DEC = 15,
		SQR2 = 16,
		PROP = 17,
		FOR2 = 18,
		NORET = 19,
		SEMI = 20,
		DEFDIM = 21,
		LPAREN = 22,
		NSTRING = 23,
		COMMA = 24,
		RPAREN = 25,
		WHILE = 26,
		BREAK = 27,
		CONTINUE = 28,
		IF = 29,
		ELSE = 30,
		PRINT = 31,
		VAR_ID = 32,
		ATT_ID = 33,
		LCURL = 34,
		RCURL = 35,
		FOR = 36,
		RAM_DELETE = 37,
		RAM_WRITE = 38,
		SET_MISS = 39,
		CH_MISS = 40,
		DIM_ID = 41,
		DIM_MTD_ID = 42,
		FUNC = 43,
		PAVG = 44,
		PAVGSQR = 45,
		PMAX = 46,
		PMIN = 47,
		PRMS = 48,
		PRMSSDN = 49,
		PSQR = 50,
		ARVG = 51,
		PTTL = 52,
		DOT = 53,
		PSIZE = 54,
		PTYPE = 55,
		PNDIMS = 56,
		INC = 57,
		DEC = 58,
		LNOT = 59,
		PLUS = 60,
		MINUS = 61,
		TIMES = 62,
		CARET = 63,
		DIVIDE = 64,
		MOD = 65,
		LTHAN = 66,
		GTHAN = 67,
		GEQ = 68,
		LEQ = 69,
		EQ = 70,
		NEQ = 71,
		LAND = 72,
		LOR = 73,
		QUESTION = 74,
		COLON = 75,
		ASSIGN = 76,
		PLUS_ASSIGN = 77,
		MINUS_ASSIGN = 78,
		TIMES_ASSIGN = 79,
		DIVIDE_ASSIGN = 80,
		LSQUARE = 81,
		RSQUARE = 82,
		FLOAT = 83,
		DOUBLE = 84,
		INT = 85,
		BYTE = 86,
		SHORT = 87,
		USHORT = 88,
		UINT = 89,
		INT64 = 90,
		UINT64 = 91,
		DIM_ID_SIZE = 92,
		NRootAST = 93,
		SHIFTL = 94,
		SHIFTR = 95,
		PSQRAVG = 96,
		QUOTE = 97,
		DGT = 98,
		LPH = 99,
		LPHDGT = 100,
		XPN = 101,
		BLASTOUT = 102,
		UNUSED_OPS = 103,
		Whitespace = 104,
		CXX_COMMENT = 105,
		C_COMMENT = 106,
		NUMBER_DOT = 107,
		NUMBER = 108,
		VAR_ATT = 109,
		VAR_ATT_QT = 110,
		DIM_VAL = 111,
		LMT_DMN = 112,
		UBYTE = 113,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_ncoParserTokenTypes_hpp_*/
