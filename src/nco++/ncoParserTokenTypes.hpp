#ifndef INC_ncoParserTokenTypes_hpp_
#define INC_ncoParserTokenTypes_hpp_

/* $ANTLR 2.7.6 (20060511): "ncoGrammer.g" -> "ncoParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API ncoParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NULL_NODE = 4,
		BLOCK = 5,
		ARG_LIST = 6,
		DMN_LIST = 7,
		DMN_ARG_LIST = 8,
		LMT_LIST = 9,
		VALUE_LIST = 10,
		FUNC_ARG = 11,
		LMT = 12,
		EXPR = 13,
		FEXPR = 14,
		POST_INC = 15,
		POST_DEC = 16,
		UTIMES = 17,
		SQR2 = 18,
		PROP = 19,
		FOR2 = 20,
		NORET = 21,
		ATAN2 = 22,
		SEMI = 23,
		DEFDIM = 24,
		LPAREN = 25,
		NSTRING = 26,
		COMMA = 27,
		RPAREN = 28,
		WHILE = 29,
		BREAK = 30,
		CONTINUE = 31,
		IF = 32,
		ELSE = 33,
		PRINT = 34,
		VAR_ID = 35,
		ATT_ID = 36,
		LCURL = 37,
		RCURL = 38,
		FOR = 39,
		COLON = 40,
		LSQUARE = 41,
		DIM_ID = 42,
		RSQUARE = 43,
		DIVIDE = 44,
		DIM_MTD_ID = 45,
		DOT = 46,
		FUNC = 47,
		INC = 48,
		DEC = 49,
		LNOT = 50,
		PLUS = 51,
		MINUS = 52,
		TIMES = 53,
		CARET = 54,
		MOD = 55,
		LTHAN = 56,
		GTHAN = 57,
		GEQ = 58,
		LEQ = 59,
		EQ = 60,
		NEQ = 61,
		LAND = 62,
		LOR = 63,
		QUESTION = 64,
		ASSIGN = 65,
		PLUS_ASSIGN = 66,
		MINUS_ASSIGN = 67,
		TIMES_ASSIGN = 68,
		DIVIDE_ASSIGN = 69,
		FLOAT = 70,
		DOUBLE = 71,
		INT = 72,
		BYTE = 73,
		UBYTE = 74,
		SHORT = 75,
		USHORT = 76,
		UINT = 77,
		INT64 = 78,
		UINT64 = 79,
		DIM_ID_SIZE = 80,
		NRootAST = 81,
		SHIFTL = 82,
		SHIFTR = 83,
		QUOTE = 84,
		DGT = 85,
		LPH = 86,
		LPHDGT = 87,
		XPN = 88,
		BLASTOUT = 89,
		UNUSED_OPS = 90,
		Whitespace = 91,
		CXX_COMMENT = 92,
		C_COMMENT = 93,
		NUMBER_DOT = 94,
		NUMBER = 95,
		VAR_ATT = 96,
		VAR_ATT_QT = 97,
		DIM_VAL = 98,
		LMT_DMN = 99,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_ncoParserTokenTypes_hpp_*/
