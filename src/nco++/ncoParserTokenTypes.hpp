#ifndef INC_ncoParserTokenTypes_hpp_
#define INC_ncoParserTokenTypes_hpp_

/* $ANTLR 2.7.6 (20060903): "ncoGrammer.g" -> "ncoParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API ncoParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NULL_NODE = 4,
		BLOCK = 5,
		ARG_LIST = 6,
		DMN_LIST = 7,
		LMT_LIST = 8,
		VALUE_LIST = 9,
		LMT = 10,
		EXPR = 11,
		POST_INC = 12,
		POST_DEC = 13,
		SEMI = 14,
		LCURL = 15,
		RCURL = 16,
		IF = 17,
		LPAREN = 18,
		RPAREN = 19,
		ELSE = 20,
		VAR_ID = 21,
		ATT_ID = 22,
		DEFDIM = 23,
		NSTRING = 24,
		COMMA = 25,
		FUNC = 26,
		PSIZE = 27,
		PTYPE = 28,
		PMIN = 29,
		PMAX = 30,
		PSUM = 31,
		PAVG = 32,
		DOT = 33,
		INC = 34,
		DEC = 35,
		LNOT = 36,
		PLUS = 37,
		MINUS = 38,
		CARET = 39,
		TIMES = 40,
		DIVIDE = 41,
		MOD = 42,
		LTHAN = 43,
		GTHAN = 44,
		GEQ = 45,
		LEQ = 46,
		EQ = 47,
		NEQ = 48,
		LAND = 49,
		LOR = 50,
		QUESTION = 51,
		COLON = 52,
		ASSIGN = 53,
		PLUS_ASSIGN = 54,
		MINUS_ASSIGN = 55,
		TIMES_ASSIGN = 56,
		DIVIDE_ASSIGN = 57,
		LSQUARE = 58,
		DIM_ID = 59,
		RSQUARE = 60,
		BYTE = 61,
		SHORT = 62,
		INT = 63,
		FLOAT = 64,
		DOUBLE = 65,
		DIM_ID_SIZE = 66,
		ATT_ID_SIZE = 67,
		NRootAST = 68,
		SHIFTL = 69,
		SHIFTR = 70,
		QUOTE = 71,
		DGT = 72,
		LPH = 73,
		LPHDGT = 74,
		XPN = 75,
		BLASTOUT = 76,
		UNUSED_OPS = 77,
		Whitespace = 78,
		CPP_COMMENT = 79,
		C_COMMENT = 80,
		NUMBER_DOT = 81,
		NUMBER = 82,
		VAR_ATT = 83,
		DIM_VAL = 84,
		LMT_DMN = 85,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_ncoParserTokenTypes_hpp_*/
