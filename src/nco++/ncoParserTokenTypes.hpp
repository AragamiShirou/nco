#ifndef INC_ncoParserTokenTypes_hpp_
#define INC_ncoParserTokenTypes_hpp_

/* $ANTLR 2.7.6 (20060511): "ncoGrammer.g" -> "ncoParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API ncoParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NULL_NODE = 4,
		BLOCK = 5,
		ARG_LIST = 6,
		DMN_LIST = 7,
		DMN_ARG_LIST = 8,
		LMT_LIST = 9,
		VALUE_LIST = 10,
		FUNC_ARG = 11,
		LMT = 12,
		EXPR = 13,
		POST_INC = 14,
		POST_DEC = 15,
		SQR2 = 16,
		PROP = 17,
		FOR2 = 18,
		NORET = 19,
		SEMI = 20,
		DEFDIM = 21,
		LPAREN = 22,
		NSTRING = 23,
		COMMA = 24,
		RPAREN = 25,
		WHILE = 26,
		BREAK = 27,
		CONTINUE = 28,
		IF = 29,
		ELSE = 30,
		PRINT = 31,
		VAR_ID = 32,
		ATT_ID = 33,
		LCURL = 34,
		RCURL = 35,
		FOR = 36,
		COLON = 37,
		LSQUARE = 38,
		DIM_ID = 39,
		RSQUARE = 40,
		DIVIDE = 41,
		DIM_MTD_ID = 42,
		DOT = 43,
		FUNC = 44,
		INC = 45,
		DEC = 46,
		LNOT = 47,
		PLUS = 48,
		MINUS = 49,
		TIMES = 50,
		CARET = 51,
		MOD = 52,
		LTHAN = 53,
		GTHAN = 54,
		GEQ = 55,
		LEQ = 56,
		EQ = 57,
		NEQ = 58,
		LAND = 59,
		LOR = 60,
		QUESTION = 61,
		ASSIGN = 62,
		PLUS_ASSIGN = 63,
		MINUS_ASSIGN = 64,
		TIMES_ASSIGN = 65,
		DIVIDE_ASSIGN = 66,
		FLOAT = 67,
		DOUBLE = 68,
		INT = 69,
		BYTE = 70,
		SHORT = 71,
		USHORT = 72,
		UINT = 73,
		INT64 = 74,
		UINT64 = 75,
		DIM_ID_SIZE = 76,
		NRootAST = 77,
		SHIFTL = 78,
		SHIFTR = 79,
		QUOTE = 80,
		DGT = 81,
		LPH = 82,
		LPHDGT = 83,
		XPN = 84,
		BLASTOUT = 85,
		UNUSED_OPS = 86,
		Whitespace = 87,
		CXX_COMMENT = 88,
		C_COMMENT = 89,
		NUMBER_DOT = 90,
		NUMBER = 91,
		VAR_ATT = 92,
		VAR_ATT_QT = 93,
		DIM_VAL = 94,
		LMT_DMN = 95,
		UBYTE = 96,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_ncoParserTokenTypes_hpp_*/
