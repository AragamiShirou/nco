#ifndef INC_ncoParserTokenTypes_hpp_
#define INC_ncoParserTokenTypes_hpp_

/* $ANTLR 2.7.6 (20070910): "ncoGrammer.g" -> "ncoParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API ncoParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NULL_NODE = 4,
		BLOCK = 5,
		ARG_LIST = 6,
		DMN_LIST = 7,
		DMN_ARG_LIST = 8,
		LMT_LIST = 9,
		VALUE_LIST = 10,
		FUNC_ARG = 11,
		LMT = 12,
		EXPR = 13,
		POST_INC = 14,
		POST_DEC = 15,
		UTIMES = 16,
		SQR2 = 17,
		PROP = 18,
		FOR2 = 19,
		NORET = 20,
		SEMI = 21,
		DEFDIM = 22,
		LPAREN = 23,
		NSTRING = 24,
		COMMA = 25,
		RPAREN = 26,
		WHILE = 27,
		BREAK = 28,
		CONTINUE = 29,
		IF = 30,
		ELSE = 31,
		PRINT = 32,
		VAR_ID = 33,
		ATT_ID = 34,
		LCURL = 35,
		RCURL = 36,
		FOR = 37,
		COLON = 38,
		LSQUARE = 39,
		DIM_ID = 40,
		RSQUARE = 41,
		DIVIDE = 42,
		DIM_MTD_ID = 43,
		DOT = 44,
		FUNC = 45,
		INC = 46,
		DEC = 47,
		LNOT = 48,
		PLUS = 49,
		MINUS = 50,
		TIMES = 51,
		CARET = 52,
		MOD = 53,
		LTHAN = 54,
		GTHAN = 55,
		GEQ = 56,
		LEQ = 57,
		EQ = 58,
		NEQ = 59,
		LAND = 60,
		LOR = 61,
		QUESTION = 62,
		ASSIGN = 63,
		PLUS_ASSIGN = 64,
		MINUS_ASSIGN = 65,
		TIMES_ASSIGN = 66,
		DIVIDE_ASSIGN = 67,
		FLOAT = 68,
		DOUBLE = 69,
		INT = 70,
		BYTE = 71,
		UBYTE = 72,
		SHORT = 73,
		USHORT = 74,
		UINT = 75,
		INT64 = 76,
		UINT64 = 77,
		DIM_ID_SIZE = 78,
		NRootAST = 79,
		SHIFTL = 80,
		SHIFTR = 81,
		QUOTE = 82,
		DGT = 83,
		LPH = 84,
		LPHDGT = 85,
		XPN = 86,
		BLASTOUT = 87,
		UNUSED_OPS = 88,
		Whitespace = 89,
		CXX_COMMENT = 90,
		C_COMMENT = 91,
		NUMBER_DOT = 92,
		NUMBER = 93,
		VAR_ATT = 94,
		VAR_ATT_QT = 95,
		DIM_VAL = 96,
		LMT_DMN = 97,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_ncoParserTokenTypes_hpp_*/
