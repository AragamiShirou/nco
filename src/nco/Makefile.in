# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# $Header: /data/zender/nco_20150216/nco/src/nco/Makefile.in,v 1.68 2006-08-24 20:47:24 zender Exp $ -*-makefile-*-


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AR = @AR@
AS = @AS@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
HAVE_LIB = @HAVE_LIB@
LEX = @LEX@
LIB = @LIB@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIB = @LTLIB@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MPI_CC = @MPI_CC@
NCOXX = @NCOXX@
NCO_CXX = @NCO_CXX@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
RC = @RC@
RUNANTLR = @RUNANTLR@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
path_to_ncgen = @path_to_ncgen@
@BUILD_YACC_SOURCE_TRUE@NCAP = ncap
@BUILD_YACC_SOURCE_FALSE@NCAP = 
@BUILD_YACC_SOURCE_TRUE@NCWA = ncwa
@BUILD_YACC_SOURCE_FALSE@NCWA = 
@TEST_DAP_FALSE@DAP_TESTS = 
@NCO_NEED_GETOPT_LONG_TRUE@NCO_GETOPT = nco_getopt.c
@NCO_NEED_GETOPT_LONG_FALSE@NCO_GETOPT = 
@ENABLE_MPI_TRUE@bin_PROGRAMS = ${NCAP} ncatted ncbo ncecat ncflint ncks ncpdq ncra ncrename mpncbo mpncecat mpncflint mpncpdq mpncra mpncwa ${NCWA}
@ENABLE_MPI_FALSE@bin_PROGRAMS = ${NCAP} ncatted ncbo ncecat ncflint ncks ncpdq ncra ncrename  ${NCWA}

AM_YFLAGS = -d

ncap_SOURCES = ncap_utl.c ncap.c ncap_yacc.y ncap_lex.l
ncap_LDADD = libnco.la

ncatted_SOURCES = ncatted.c
ncatted_LDADD = libnco.la

ncbo_SOURCES = ncbo.c
ncbo_LDADD = libnco.la

ncecat_SOURCES = ncecat.c
ncecat_LDADD = libnco.la

ncflint_SOURCES = ncflint.c
ncflint_LDADD = libnco.la

ncks_SOURCES = ncks.c
ncks_LDADD = libnco.la

ncpdq_SOURCES = ncpdq.c
ncpdq_LDADD = libnco.la

ncra_SOURCES = ncra.c
ncra_LDADD = libnco.la

ncrename_SOURCES = ncrename.c
ncrename_LDADD = libnco.la

mpncbo_SOURCES = mpncbo.c
mpncbo_LDADD = libnco.la

mpncecat_SOURCES = mpncecat.c
mpncecat_LDADD = libnco.la

mpncflint_SOURCES = mpncflint.c
mpncflint_LDADD = libnco.la

mpncpdq_SOURCES = mpncpdq.c
mpncpdq_LDADD = libnco.la

mpncra_SOURCES = mpncra.c
mpncra_LDADD = libnco.la

# ncwa also requires ncap_yacc.y, but that should already be built with ncap
ncwa_SOURCES = ncwa.c ncap_utl.c ncap_lex.l ncap_yacc.c
ncwa_LDADD = libnco.la

mpncwa_SOURCES = mpncwa.c ncap_utl.c ncap_lex.l ncap_yacc.c
mpncwa_LDADD = libnco.la

HEADER_SRC =  libnco.h ncap.h ncap_yacc.h nco.h nco_att_utl.h nco_bnr.h nco_cln_utl.h nco_cnf_dmn.h nco_cnf_typ.h nco_cnv_arm.h nco_cnv_csm.h nco_ctl.h nco_dbg.h nco_dmn_utl.h nco_fl_utl.h nco_getopt.h nco_lmt.h nco_lst_utl.h nco_mmr.h nco_mpi.h nco_msa.h nco_mss_val.h nco_netcdf.h nco_omp.h nco_pck.h nco_prn.h nco_rec_var.h nco_rth_flt.h nco_rth_utl.h nco_scl_utl.h nco_scm.h nco_sng_utl.h nco_typ.h nco_var_avg.h nco_var_lst.h nco_var_rth.h nco_var_scv.h nco_var_utl.h


lib_LTLIBRARIES = libnco.la

# This creates version-stamped shared-library, e.g., libnco-2.9.4.so
libnco_la_LDFLAGS = -release @VERSION@

libnco_la_SOURCES =  $(HEADER_SRC) ${NCO_GETOPT} nco_att_utl.c nco_bnr.c nco_cln_utl.c nco_cnf_dmn.c nco_cnf_typ.c nco_cnv_arm.c nco_cnv_csm.c nco_ctl.c nco_dbg.c nco_dmn_utl.c nco_fl_utl.c nco_lmt.c nco_lst_utl.c nco_mmr.c nco_msa.c nco_mss_val.c nco_netcdf.c nco_omp.c nco_pck.c nco_prn.c nco_rec_var.c nco_rth_flt.c nco_rth_utl.c nco_scl_utl.c nco_scm.c nco_sng_utl.c nco_var_avg.c nco_var_lst.c nco_var_rth.c nco_var_scv.c nco_var_utl.c


TESTS = ${DAP_TESTS}

EXTRA_DIST = nco_getopt.c

DISTCLEANFILES = ncap_lex.c ncap_yacc.c ncap_yacc.h

CLEANFILES = ncdiff ncea ncrcat mpncdiff mpncea mpncrcat
mkinstalldirs = $(SHELL) $(top_srcdir)/autobld/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libnco_la_LIBADD = 
@NCO_NEED_GETOPT_LONG_FALSE@libnco_la_OBJECTS =  nco_att_utl.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_bnr.lo nco_cln_utl.lo nco_cnf_dmn.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_cnf_typ.lo nco_cnv_arm.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_cnv_csm.lo nco_ctl.lo nco_dbg.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_dmn_utl.lo nco_fl_utl.lo nco_lmt.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_lst_utl.lo nco_mmr.lo nco_msa.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_mss_val.lo nco_netcdf.lo nco_omp.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_pck.lo nco_prn.lo nco_rec_var.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_rth_flt.lo nco_rth_utl.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_scl_utl.lo nco_scm.lo nco_sng_utl.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_var_avg.lo nco_var_lst.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_var_rth.lo nco_var_scv.lo \
@NCO_NEED_GETOPT_LONG_FALSE@nco_var_utl.lo
@NCO_NEED_GETOPT_LONG_TRUE@libnco_la_OBJECTS =  nco_getopt.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_att_utl.lo nco_bnr.lo nco_cln_utl.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_cnf_dmn.lo nco_cnf_typ.lo nco_cnv_arm.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_cnv_csm.lo nco_ctl.lo nco_dbg.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_dmn_utl.lo nco_fl_utl.lo nco_lmt.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_lst_utl.lo nco_mmr.lo nco_msa.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_mss_val.lo nco_netcdf.lo nco_omp.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_pck.lo nco_prn.lo nco_rec_var.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_rth_flt.lo nco_rth_utl.lo nco_scl_utl.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_scm.lo nco_sng_utl.lo nco_var_avg.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_var_lst.lo nco_var_rth.lo nco_var_scv.lo \
@NCO_NEED_GETOPT_LONG_TRUE@nco_var_utl.lo
@ENABLE_MPI_FALSE@bin_PROGRAMS =  ncatted$(EXEEXT) ncbo$(EXEEXT) \
@ENABLE_MPI_FALSE@ncecat$(EXEEXT) ncflint$(EXEEXT) ncks$(EXEEXT) \
@ENABLE_MPI_FALSE@ncpdq$(EXEEXT) ncra$(EXEEXT) ncrename$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)

ncap_OBJECTS =  ncap_utl.$(OBJEXT) ncap.$(OBJEXT) ncap_yacc.$(OBJEXT) \
ncap_lex.$(OBJEXT)
ncap_DEPENDENCIES =  libnco.la
ncap_LDFLAGS = 
ncatted_OBJECTS =  ncatted.$(OBJEXT)
ncatted_DEPENDENCIES =  libnco.la
ncatted_LDFLAGS = 
ncbo_OBJECTS =  ncbo.$(OBJEXT)
ncbo_DEPENDENCIES =  libnco.la
ncbo_LDFLAGS = 
ncecat_OBJECTS =  ncecat.$(OBJEXT)
ncecat_DEPENDENCIES =  libnco.la
ncecat_LDFLAGS = 
ncflint_OBJECTS =  ncflint.$(OBJEXT)
ncflint_DEPENDENCIES =  libnco.la
ncflint_LDFLAGS = 
ncks_OBJECTS =  ncks.$(OBJEXT)
ncks_DEPENDENCIES =  libnco.la
ncks_LDFLAGS = 
ncpdq_OBJECTS =  ncpdq.$(OBJEXT)
ncpdq_DEPENDENCIES =  libnco.la
ncpdq_LDFLAGS = 
ncra_OBJECTS =  ncra.$(OBJEXT)
ncra_DEPENDENCIES =  libnco.la
ncra_LDFLAGS = 
ncrename_OBJECTS =  ncrename.$(OBJEXT)
ncrename_DEPENDENCIES =  libnco.la
ncrename_LDFLAGS = 
mpncbo_OBJECTS =  mpncbo.$(OBJEXT)
mpncbo_DEPENDENCIES =  libnco.la
mpncbo_LDFLAGS = 
mpncecat_OBJECTS =  mpncecat.$(OBJEXT)
mpncecat_DEPENDENCIES =  libnco.la
mpncecat_LDFLAGS = 
mpncflint_OBJECTS =  mpncflint.$(OBJEXT)
mpncflint_DEPENDENCIES =  libnco.la
mpncflint_LDFLAGS = 
mpncpdq_OBJECTS =  mpncpdq.$(OBJEXT)
mpncpdq_DEPENDENCIES =  libnco.la
mpncpdq_LDFLAGS = 
mpncra_OBJECTS =  mpncra.$(OBJEXT)
mpncra_DEPENDENCIES =  libnco.la
mpncra_LDFLAGS = 
mpncwa_OBJECTS =  mpncwa.$(OBJEXT) ncap_utl.$(OBJEXT) ncap_lex.$(OBJEXT) \
ncap_yacc.$(OBJEXT)
mpncwa_DEPENDENCIES =  libnco.la
mpncwa_LDFLAGS = 
ncwa_OBJECTS =  ncwa.$(OBJEXT) ncap_utl.$(OBJEXT) ncap_lex.$(OBJEXT) \
ncap_yacc.$(OBJEXT)
ncwa_DEPENDENCIES =  libnco.la
ncwa_LDFLAGS = 
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LEXLIB = @LEXLIB@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in ncap_lex.c ncap_yacc.c


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
DEP_FILES =  .deps/mpncbo.P .deps/mpncecat.P .deps/mpncflint.P \
.deps/mpncpdq.P .deps/mpncra.P .deps/mpncwa.P .deps/ncap.P \
.deps/ncap_lex.P .deps/ncap_utl.P .deps/ncap_yacc.P .deps/ncatted.P \
.deps/ncbo.P .deps/ncecat.P .deps/ncflint.P .deps/ncks.P \
.deps/nco_att_utl.P .deps/nco_bnr.P .deps/nco_cln_utl.P \
.deps/nco_cnf_dmn.P .deps/nco_cnf_typ.P .deps/nco_cnv_arm.P \
.deps/nco_cnv_csm.P .deps/nco_ctl.P .deps/nco_dbg.P .deps/nco_dmn_utl.P \
.deps/nco_fl_utl.P .deps/nco_getopt.P .deps/nco_lmt.P \
.deps/nco_lst_utl.P .deps/nco_mmr.P .deps/nco_msa.P .deps/nco_mss_val.P \
.deps/nco_netcdf.P .deps/nco_omp.P .deps/nco_pck.P .deps/nco_prn.P \
.deps/nco_rec_var.P .deps/nco_rth_flt.P .deps/nco_rth_utl.P \
.deps/nco_scl_utl.P .deps/nco_scm.P .deps/nco_sng_utl.P \
.deps/nco_var_avg.P .deps/nco_var_lst.P .deps/nco_var_rth.P \
.deps/nco_var_scv.P .deps/nco_var_utl.P .deps/ncpdq.P .deps/ncra.P \
.deps/ncrename.P .deps/ncwa.P
SOURCES = $(libnco_la_SOURCES) $(ncap_SOURCES) $(ncatted_SOURCES) $(ncbo_SOURCES) $(ncecat_SOURCES) $(ncflint_SOURCES) $(ncks_SOURCES) $(ncpdq_SOURCES) $(ncra_SOURCES) $(ncrename_SOURCES) $(mpncbo_SOURCES) $(mpncecat_SOURCES) $(mpncflint_SOURCES) $(mpncpdq_SOURCES) $(mpncra_SOURCES) $(mpncwa_SOURCES) $(ncwa_SOURCES)
OBJECTS = $(libnco_la_OBJECTS) $(ncap_OBJECTS) $(ncatted_OBJECTS) $(ncbo_OBJECTS) $(ncecat_OBJECTS) $(ncflint_OBJECTS) $(ncks_OBJECTS) $(ncpdq_OBJECTS) $(ncra_OBJECTS) $(ncrename_OBJECTS) $(mpncbo_OBJECTS) $(mpncecat_OBJECTS) $(mpncflint_OBJECTS) $(mpncpdq_OBJECTS) $(mpncra_OBJECTS) $(mpncwa_OBJECTS) $(ncwa_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .l .lo .o .obj .s .y
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --foreign src/nco/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libnco.la: $(libnco_la_OBJECTS) $(libnco_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libnco_la_LDFLAGS) $(libnco_la_OBJECTS) $(libnco_la_LIBADD) $(LIBS)

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

ncap$(EXEEXT): $(ncap_OBJECTS) $(ncap_DEPENDENCIES)
	@rm -f ncap$(EXEEXT)
	$(LINK) $(ncap_LDFLAGS) $(ncap_OBJECTS) $(ncap_LDADD) $(LIBS)

ncatted$(EXEEXT): $(ncatted_OBJECTS) $(ncatted_DEPENDENCIES)
	@rm -f ncatted$(EXEEXT)
	$(LINK) $(ncatted_LDFLAGS) $(ncatted_OBJECTS) $(ncatted_LDADD) $(LIBS)

ncbo$(EXEEXT): $(ncbo_OBJECTS) $(ncbo_DEPENDENCIES)
	@rm -f ncbo$(EXEEXT)
	$(LINK) $(ncbo_LDFLAGS) $(ncbo_OBJECTS) $(ncbo_LDADD) $(LIBS)

ncecat$(EXEEXT): $(ncecat_OBJECTS) $(ncecat_DEPENDENCIES)
	@rm -f ncecat$(EXEEXT)
	$(LINK) $(ncecat_LDFLAGS) $(ncecat_OBJECTS) $(ncecat_LDADD) $(LIBS)

ncflint$(EXEEXT): $(ncflint_OBJECTS) $(ncflint_DEPENDENCIES)
	@rm -f ncflint$(EXEEXT)
	$(LINK) $(ncflint_LDFLAGS) $(ncflint_OBJECTS) $(ncflint_LDADD) $(LIBS)

ncks$(EXEEXT): $(ncks_OBJECTS) $(ncks_DEPENDENCIES)
	@rm -f ncks$(EXEEXT)
	$(LINK) $(ncks_LDFLAGS) $(ncks_OBJECTS) $(ncks_LDADD) $(LIBS)

ncpdq$(EXEEXT): $(ncpdq_OBJECTS) $(ncpdq_DEPENDENCIES)
	@rm -f ncpdq$(EXEEXT)
	$(LINK) $(ncpdq_LDFLAGS) $(ncpdq_OBJECTS) $(ncpdq_LDADD) $(LIBS)

ncra$(EXEEXT): $(ncra_OBJECTS) $(ncra_DEPENDENCIES)
	@rm -f ncra$(EXEEXT)
	$(LINK) $(ncra_LDFLAGS) $(ncra_OBJECTS) $(ncra_LDADD) $(LIBS)

ncrename$(EXEEXT): $(ncrename_OBJECTS) $(ncrename_DEPENDENCIES)
	@rm -f ncrename$(EXEEXT)
	$(LINK) $(ncrename_LDFLAGS) $(ncrename_OBJECTS) $(ncrename_LDADD) $(LIBS)

mpncbo$(EXEEXT): $(mpncbo_OBJECTS) $(mpncbo_DEPENDENCIES)
	@rm -f mpncbo$(EXEEXT)
	$(LINK) $(mpncbo_LDFLAGS) $(mpncbo_OBJECTS) $(mpncbo_LDADD) $(LIBS)

mpncecat$(EXEEXT): $(mpncecat_OBJECTS) $(mpncecat_DEPENDENCIES)
	@rm -f mpncecat$(EXEEXT)
	$(LINK) $(mpncecat_LDFLAGS) $(mpncecat_OBJECTS) $(mpncecat_LDADD) $(LIBS)

mpncflint$(EXEEXT): $(mpncflint_OBJECTS) $(mpncflint_DEPENDENCIES)
	@rm -f mpncflint$(EXEEXT)
	$(LINK) $(mpncflint_LDFLAGS) $(mpncflint_OBJECTS) $(mpncflint_LDADD) $(LIBS)

mpncpdq$(EXEEXT): $(mpncpdq_OBJECTS) $(mpncpdq_DEPENDENCIES)
	@rm -f mpncpdq$(EXEEXT)
	$(LINK) $(mpncpdq_LDFLAGS) $(mpncpdq_OBJECTS) $(mpncpdq_LDADD) $(LIBS)

mpncra$(EXEEXT): $(mpncra_OBJECTS) $(mpncra_DEPENDENCIES)
	@rm -f mpncra$(EXEEXT)
	$(LINK) $(mpncra_LDFLAGS) $(mpncra_OBJECTS) $(mpncra_LDADD) $(LIBS)

mpncwa$(EXEEXT): $(mpncwa_OBJECTS) $(mpncwa_DEPENDENCIES)
	@rm -f mpncwa$(EXEEXT)
	$(LINK) $(mpncwa_LDFLAGS) $(mpncwa_OBJECTS) $(mpncwa_LDADD) $(LIBS)

ncwa$(EXEEXT): $(ncwa_OBJECTS) $(ncwa_DEPENDENCIES)
	@rm -f ncwa$(EXEEXT)
	$(LINK) $(ncwa_LDFLAGS) $(ncwa_OBJECTS) $(ncwa_LDADD) $(LIBS)

ncap$(EXEEXT): $(ncap_OBJECTS) $(ncap_DEPENDENCIES)
	@rm -f ncap$(EXEEXT)
	$(LINK) $(ncap_LDFLAGS) $(ncap_OBJECTS) $(ncap_LDADD) $(LIBS)

ncatted$(EXEEXT): $(ncatted_OBJECTS) $(ncatted_DEPENDENCIES)
	@rm -f ncatted$(EXEEXT)
	$(LINK) $(ncatted_LDFLAGS) $(ncatted_OBJECTS) $(ncatted_LDADD) $(LIBS)

ncbo$(EXEEXT): $(ncbo_OBJECTS) $(ncbo_DEPENDENCIES)
	@rm -f ncbo$(EXEEXT)
	$(LINK) $(ncbo_LDFLAGS) $(ncbo_OBJECTS) $(ncbo_LDADD) $(LIBS)

ncecat$(EXEEXT): $(ncecat_OBJECTS) $(ncecat_DEPENDENCIES)
	@rm -f ncecat$(EXEEXT)
	$(LINK) $(ncecat_LDFLAGS) $(ncecat_OBJECTS) $(ncecat_LDADD) $(LIBS)

ncflint$(EXEEXT): $(ncflint_OBJECTS) $(ncflint_DEPENDENCIES)
	@rm -f ncflint$(EXEEXT)
	$(LINK) $(ncflint_LDFLAGS) $(ncflint_OBJECTS) $(ncflint_LDADD) $(LIBS)

ncks$(EXEEXT): $(ncks_OBJECTS) $(ncks_DEPENDENCIES)
	@rm -f ncks$(EXEEXT)
	$(LINK) $(ncks_LDFLAGS) $(ncks_OBJECTS) $(ncks_LDADD) $(LIBS)

ncpdq$(EXEEXT): $(ncpdq_OBJECTS) $(ncpdq_DEPENDENCIES)
	@rm -f ncpdq$(EXEEXT)
	$(LINK) $(ncpdq_LDFLAGS) $(ncpdq_OBJECTS) $(ncpdq_LDADD) $(LIBS)

ncra$(EXEEXT): $(ncra_OBJECTS) $(ncra_DEPENDENCIES)
	@rm -f ncra$(EXEEXT)
	$(LINK) $(ncra_LDFLAGS) $(ncra_OBJECTS) $(ncra_LDADD) $(LIBS)

ncrename$(EXEEXT): $(ncrename_OBJECTS) $(ncrename_DEPENDENCIES)
	@rm -f ncrename$(EXEEXT)
	$(LINK) $(ncrename_LDFLAGS) $(ncrename_OBJECTS) $(ncrename_LDADD) $(LIBS)

ncwa$(EXEEXT): $(ncwa_OBJECTS) $(ncwa_DEPENDENCIES)
	@rm -f ncwa$(EXEEXT)
	$(LINK) $(ncwa_LDFLAGS) $(ncwa_OBJECTS) $(ncwa_LDADD) $(LIBS)
.l.c:
	$(LEX) $(AM_LFLAGS) $(LFLAGS) $< && mv $(LEX_OUTPUT_ROOT).c $@
.y.c:
	$(YACC) $(AM_YFLAGS) $(YFLAGS) $< && mv y.tab.c $*.c
	if test -f y.tab.h; then \
	if cmp -s y.tab.h $*.h; then rm -f y.tab.h; else mv y.tab.h $*.h; fi; \
	else :; fi
ncap_yacc.h: ncap_yacc.c


tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src/nco

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --foreign src/nco/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
check-TESTS: $(TESTS)
	@failed=0; all=0; \
	srcdir=$(srcdir); export srcdir; \
	for tst in $(TESTS); do \
	  if test -f $$tst; then dir=.; \
	  else dir="$(srcdir)"; fi; \
	  if $(TESTS_ENVIRONMENT) $$dir/$$tst; then \
	    all=`expr $$all + 1`; \
	    echo "PASS: $$tst"; \
	  elif test $$? -ne 77; then \
	    all=`expr $$all + 1`; \
	    failed=`expr $$failed + 1`; \
	    echo "FAIL: $$tst"; \
	  fi; \
	done; \
	if test "$$failed" -eq 0; then \
	  banner="All $$all tests passed"; \
	else \
	  banner="$$failed of $$all tests failed"; \
	fi; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"; \
	test "$$failed" -eq 0
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	-test -z "ncap_lexcncap_yacchncap_yaccc" || rm -f ncap_lexc ncap_yacch ncap_yaccc
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-binPROGRAMS \
		mostlyclean-tags mostlyclean-depend mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool \
		clean-binPROGRAMS clean-tags clean-depend clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-binPROGRAMS distclean-tags \
		distclean-depend distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-binPROGRAMS maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS tags mostlyclean-tags distclean-tags clean-tags \
maintainer-clean-tags distdir mostlyclean-depend distclean-depend \
clean-depend maintainer-clean-depend check-TESTS info-am info dvi-am \
dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


@TEST_DAP_TRUE@echo "ARCHAIC: Test DAP with <NCO_ROOT>/bm/nco_bm.pl now"

install-exec-hook:
	cd $(DESTDIR)$(bindir) && ln -s -f ncbo ncdiff || (rm -f ncdiff && ln -s -f ncbo ncdiff)
	cd $(DESTDIR)$(bindir) && ln -s -f ncra ncea || (rm -f ncea && ln -s -f ncra ncea)
	cd $(DESTDIR)$(bindir) && ln -s -f ncra ncrcat || (rm -f ncrcat && ln -s -f ncra ncrcat)
	cd $(DESTDIR)$(bindir) && ln -s -f mpncbo mpncdiff || (rm -f mpncdiff && ln -s -f mpncbo mpncdiff)
	cd $(DESTDIR)$(bindir) && ln -s -f mpncra mpncea || (rm -f mpncea && ln -s -f mpncra mpncea)
	cd $(DESTDIR)$(bindir) && ln -s -f mpncra mpncrcat || (rm -f mpncrcat && ln -s -f mpncra mpncrcat)

uninstall-hook:
	cd $(DESTDIR)$(bindir) && rm -f ncdiff ncea ncrcat mpncdiff mpncea mpncrcat

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
